;;; https://github.com/borkdude/clj-kondo/blob/master/doc/config.md

{:project-root-uri "file:///home/pdenno/Documents/git/schedulingTBD"

 :linters {:mount/defstate      {:level :warning}
           :mount.core/defstate {:level :warning}} ; Guessing. Not what ethpran did.

 :hooks   {:analyze-call {mount.core/defstate hooks.defstate/defstate}}     ; Gist for defstate: https://gist.github.com/ethpran/e1741a5c408aec831b5e3a7e24f40fea

 ;; https://github.com/clj-kondo/clj-kondo/blob/master/doc/config.md#lint-a-custom-macro-like-a-built-in-macro --- Use defn, not defmacro.
 :lint-as {#_#_scheduling-tbd.shop/defdb2shop        clojure.core/defn  ; These aren't needed; I did them in-line. (See shop.clj)
           #_#_scheduling-tbd.shop/defshop2db        clojure.core/defn
           mount.core/defstate                       clj-kondo.lint-as/def-catch-all   ; Because the hook is not working!
           ezzmq.core/with-new-context               clojure.core/defmacro             ; I haven't seen defmacro being used; this 'works' as well as def-catch-all.
           #_#_ezzmq.core/with-new-context               clj-kondo.lint-as/def-catch-all}} ; A macro, but not investigated; clojure.core/defn doesn't fix it.

;;; Hooks are used for macros for which :lint-as doesn't work. Currently mine for defstate doesn't work at all!
