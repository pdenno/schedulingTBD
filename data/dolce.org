#+title: DOLCE Ontology
* Purpose: Everything I know about DOLCE and DLP.
     I moved stuff from onto.org and operations.org
     There is also my notes on:
	[[file:../my-projects/operations-ontology.org][Operations Ontology]], - Includes thoughts on DnS-like functionality.
	[[file:../my-projects/datasheet-ontology.org][Datasheet Ontology]] - First (and only?) meeting with Jamie Mills
	[[file:../software/owl-and-protege.org][OWL and Protege]]
	[[file:../my-groups/onto.org][IOF]] - currently mis-named as onto.org

   The pretty good stuff that was in clj/edn is here under the heading dolce-kif.clj
* Links
 D18 pg14 "Basic categories"
 D18 pg15 "leaf basic categories"
 [[http://www.inf.ed.ac.uk/teaching/courses/kmm/lectures.html][Slides from lectures at Edinburgh]]
 my dolce.kif ~/Documents/git/nb-agent/src/clj/pdenno/nb_agent/dolce_kif.clj
** My org files
     There is also my notes on:
	[[file:../my-projects/operations-ontology.org][Operations Ontology]], - Includes thoughts on DnS-like functionality.
	[[file:../my-projects/datasheet-ontology.org][Datasheet Ontology]] - First (and only?) meeting with Jamie Mills
	[[file:../software/owl-and-protege.org][OWL and Protege]]
	[[file:../my-groups/onto.org][IOF]] - currently mis-named as onto.org
* Definitions and some terms from the ontology
** Homeomeric
   Intuitively, we say that an occurrence is homeomeric if and only if all its temporal
   parts are described by the very expression used for the whole occurrence. (e.g. sitting).
   DLP and elsewhere (D18?): "sitting is classified as a state but running is classified as a process,
   since there are (very short) temporal parts of a running that are not themselves runnings.
** Term: Proposition (not too useful)
#+begin_src clojure
  {:rdf/type :owl/Class,
   :rdfs/comment
   ["The abstract content of a proposition.
     Abstract content is purely combinatorial: from this viewpoint, any content that can be generated by means
     of combinatorial rules is assumed to exist in the domain of quantification (reified abstracts)."],
   :rdfs/subClassOf [:dol/abstract],
   :resource/id :dol/proposition}
#+end_src
** Term: Agentive Physical Object (APO)
*** GK (GK APO NAPO)
#+BEGIN_SRC clojure
;;; (A31)
(forall (?w0) (=> (WORLD ?w0) (GK ?w0 APO NAPO)))
;;; I think this is saying a particular agentive physical object is constituted from something non-agentive.
;;; Particulars can't be both in the same viewpoint. This could be used to describe anything from
;;; breathing life in Pinocchio or adding sensors, actuators, and a controller to machinery to the point where you deem
;;; it somewhat autonomous.

;;; (D98) GK: Constantly Generically Constituted by
(defrelation GK (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (DJ ?w0 ?f ?g)
       (forall (?w ?x ?t)
	       (=> (and (WLDR ?w0 ?w) ; (defrelation WLDR (?w ?v) := (and (WORLD ?w) (WORLD ?v))) HUH? Compatible? Contemporaneous?
			(WORLD ?w)
			(PARTICULAR ?x)
			(PARTICULAR ?t)
			(?f ?w ?x))    ; If ?x is a particular APO...
		   (and (exists (?t1)
				(and (PARTICULAR ?t1) (PRE ?w ?x ?t1))) ; x is present at ?t1
			(=> (and (At ?w ?t) (PRE ?w ?x ?t))             ; ?t1 left unbound AFAICS (time or place???)
			    (exists (?y)
				    (and (PARTICULAR ?y)         ;
					 (?g ?w ?y)              ; ?y is a particular NAPO.
					 (K ?w ?y ?x ?t))))))))) ; They were in that world together at this time.

;;; (D40) PRE: Being Present at
(defrelation PRE (?w0 ?x ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?u) (and (PARTICULAR ?u)
			 (ql.T ?w0 ?u ?x)
			 (P ?w0 ?t ?u)))))     ; part of.

(defrelation ql.T (?w0 ?t ?x) :=
  (and (PARTICULAR ?t)
       (PARTICULAR ?x)
       (WORLD ?w0)
       (or (ql.T.ED ?w0 ?t ?x)     ; ?x is endurant at  ?t
	   (ql.T.PD ?w0 ?t ?x)     ; ?x is perdurant at ?t
	   (ql.T.Q ?w0 ?t ?x))))   ; ?x is a quality at ?t

;(D16) At: Atom
(defrelation At (?w0 ?x) :=
  (and (PARTICULAR ?x)
       (WORLD ?w0)
       (not (exists (?y) (and (PARTICULAR ?y)
			      (PP ?w0 ?y ?x)))))) ; It doesn't have proper parts.

;;; This is interesting, Temporal Parthood, Constitution and Participation are all the same!

;;; (ND7) Temporal Parthood
(defrelation P (?w ?x ?y ?t) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y) (PARTICULAR ?t)))

;;; (ND8) Constitution
(defrelation K (?w ?x ?y ?t) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y) (PARTICULAR ?t)))

;;; (ND9) Participation
(defrelation PC (?w ?x ?y ?t) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y) (PARTICULAR ?t)))



#+END_SRC clojure

*** One-sided dependence (OSD MOB APO)


#+BEGIN_SRC clojure
;;; (A71)
(forall (?w0) (=> (WORLD ?w0) (OSD ?w0 MOB APO))) ; MOB = Mental Object.

;;; (D74) OSD: One-sided Specific Constant Dependence
(defrelation OSD (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (SD ?w0 ?f ?g)
       (not (D ?w0 ?g ?f)))) ; The order of arguments is swapped, thus one-sided, not "co-dependent".

;;; (D72) D: Constant Dependence
(defrelation D (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (or (SD ?w0 ?f ?g) (GD ?w0 ?f ?g))))

;;; (D69) SD: Specific Constant Dep.
(defrelation SD (?w0 ?x ?y) :=
  (or (and (PARTICULAR ?x)
	   (PARTICULAR ?y)
	   (WORLD ?w0)
	   (forall (?w)
		   (=> (and (WLDR ?w0 ?w) (WORLD ?w))
		       (and (exists (?t)
				    (and (PARTICULAR ?t) (PRE ?w ?x ?t)))
			    (forall (?t)
				    (=> (and (PARTICULAR ?t) (PRE ?w ?x ?t)) ; if ?x is present at ?T
					(PRE ?w ?y ?t)))))))                 ; it must be that ?y is present at ?t
      (and (UNIVERSAL ?x)
	   (UNIVERSAL ?y)
	   (WORLD ?w0)                                                       ;.... OR .... (for universals) I NEED BOTH (see below)
	   (DJ ?w0 ?x ?y)
	   (forall (?w ?x1)
		   (=> (and (WLDR ?w0 ?w)
			    (WORLD ?w)
			    (PARTICULAR ?x1)
			    (?x ?w ?x1))                                    ; For any particular MOB
		       (exists (?y1) (and (PARTICULAR ?y1)
					  (?y ?w ?y1)                       ; there exists a particular APO
					  (SD ?w ?x1 ?y1))))))))            ; where the existence is present.


#+END_SRC clojure

#+BEGIN_SRC clojure

;;; Maximal physical participation

;;; Here I am assuming ?x is an Endurant (is it necessarily the case).

;;; The first part defines conditions on the meaning of the overlap.
;;; A (Physical) Endurant ?z overlaps with Particular Endurant ?x at some time ?t
;;;   IFF there is a particular ?v participating in the Perdurant ?y at ?t
;;;       AND ?z overlaps with ?v.
;;; ... This is true for any time and any ?z. Thus it is sort of an definition inside D67.
;;; Thus it says there is this ?v that is always (for all ?t) part of ?y (PC.T ?w0 ?v ?y ?t).

;;;; And the second part says that ?x is unique.

;;; (D67) mppc: Maximal Physical Participant
(defrelation mppc (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (forall (?z ?t)
	       (=> (and (PARTICULAR ?z)
			(PARTICULAR ?t))
		   (<=> (O ?w0 ?z ?x ?t) ; for all PED ?z overlapping with ?x and all time...
			(exists (?v)
				(and (PARTICULAR ?v)
				     (PC.T ?w0 ?v ?y ?t)   ; temporary total participation, ?y is perdurant.
				     (PED ?w0 ?z)          ; physical endurant ?z
				     (O ?w0 ?z ?v ?t)))))) ; temporal overlap
       (forall (?z ?x1 ?t)
	       (=> (and (PARTICULAR ?z)
			(PARTICULAR ?x1)
			(PARTICULAR ?t)
			(<=> (O ?w0 ?z ?x1 ?t) ; temporal overlap
			     (exists (?v)
				     (and (PARTICULAR ?v)
					  (PC.T ?w0 ?v ?y ?t)
					  (PED ?w0 ?z)
					  (O ?w0 ?z ?v ?t)))))
		   (= ?x1 ?x)))))

;;; (D64) PC_T: Temporary Total Particip. --- ?x participates in all the parts of ?y
(defrelation PC.T (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (PD ?w0 ?y)   ; perdurant
       (forall (?z)
	       (=> (and (PARTICULAR ?z)
			(P ?w0 ?z ?y)    ; parthood (occurring together)
			(PRE ?w0 ?z ?t)) ; ?z is present at ?t
		   (PC ?w0 ?x ?z ?t))))) ; participation (simple, below).

;;; (ND6) Parthood
(defrelation P (?w ?x ?y) :=> ; Note :=> here. Also, a pretty weak notion of parthood!? Not mereo/topological
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y)))

;;; (ND9) Participation
(defrelation PC (?w ?x ?y ?t) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y) (PARTICULAR ?t)))

;;; (D21) O: Temporary Overlap
(defrelation O (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?z) (and (PARTICULAR ?z)
			 (P ?w0 ?z ?x ?t)
			 (P ?w0 ?z ?y ?t)))))

;;; (D68) lf: Life
(defrelation lf (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (forall (?z)
	       (=> (PARTICULAR ?z)
		   (<=> (O ?w0 ?z ?x)
			(exists (?v)
				(and (PARTICULAR ?v)
				     (PC.T ?w0 ?y ?v)
				     (O ?w0 ?z ?v))))))
       (forall (?z ?u)
	       (=> (and (PARTICULAR ?z)
			(PARTICULAR ?u)
			(<=> (O ?w0 ?z ?u)
			     (exists (?v)
				     (and (PARTICULAR ?v)
					  (PC.T ?w0 ?y ?v)
					  (O ?w0 ?z ?v)))))
		   (= ?u ?x)))))



#+END_SRC clojure

** Term: :dol/spatio-temporal-particular (revealing about abstracts and particulars)
   Specifically, abstracts aren't reifications of (instances of) universals.
   They are particulars however.
#+begin_src clojure
    {:owl/equivalentClass {:owl/intersectionOf
			   [:dol/particular ; a class
			    {:owl/unionOf [:dol/endurant :dol/quality :dol/perdurant], :rdf/type :owl/Class}], ; a class
			   :rdf/type :owl/Class},
     :rdf/type :owl/Class,
     :rdfs/comment ["Dummy class for optimizing some property universes.
		     It includes all entities that are not reifications of universals ('abstracts'),
		     i.e. those entities that are in space-time."],
     :rdfs/subClassOf [:dol/particular],
     :resource/id :dol/spatio-temporal-particular}
#+end_src

** Terms from Nicola's December Slides, Top 20-IOF terms
  /Manufacturing Resource/ Any entity which is in the possession of an Organization and either participates or
	   may participate in one of the Manufacturing Processes adopted by such Organization.

    Notes: An entity may participate in a process described by a Plan if it complies with a Resource
	   Description that is Part of such Plan.

  /Material Resource/ A Manufacturing Resource that may be transformed or manipulated by a Manufacturing Process (that is,
	   it is present before the process starts, and it is such that at least parts of it will be present in the final
	   product; other parts –e.g., cutoffs– may be wasted).  ~Not consumables~

  /Process Resource/ A Manufacturing Resource that may be instrumental to a Manufacturing Process (that is, it may
	   participate to the process but none of its parts would be present in the final product).
	   ~workers?~

  /Technical Artifact/ an entity that exhibits [at least] minimal compliance with a Design Specification
	   (see Guarino 2014: Artefactual Systems, Missing Components, and Replaceability ~In Mendeley~)
	   _So I think this to be what Nicola calls an 'artefactual object' in his artefacts paper._
	   *I'm not crazy about "at least minimal compliance." I suppose it involves how clear it is that*
	   *the design realizes functions and sought characteristics.*

   As I noted above in "typehood"
     "Two conditions need to be satisfied for a property to single out a genuine
       ontological category (a type in Nicola's terminology):
       (1) the property must be rigid (essential to all instances)
       (2) the property must supply some common individuation and persistence conditions for its instances.
     "In my opinion, none of these conditions are satisfied for the property 'being an artefact.'  [From the artefacts paper.]

  /Specification/ [Nicola doesn't require it to be encoded in publically accessible physical medium. It could be in mind.
	   I think I am going to need this subclass that is publically accessible.]
	   _A set of propositions about the required form and function of an physical artifact or plan???_
	   [Would need to say something about what gives the set its unity???]

  /Publicly-available Specification/ a Specification encoded in an accessible physical medium.
	   Note: ~Accessible medium is...~
	   _What do I really need for my spreadsheets. Are they all specifications? I doubt it._

  /Design Specification/ a Specification of how functions and sought qualities of an artifact will be realized. =I added this.=
	   _'will be realized' makes this not what I'd want for objectives._

	   Note: It is historically dependent on the existence of an Agent whose goal is the presence of such entity.

	   Note: Nicola's paper doesn't say "function" -- I don't see where it quite defined Design Specification.
	   The slides on Top 20 indicate that a /Behavior Specification/ (undefined) is part of a Design Specification.

	   The essence of artefactual objects lies in their design features, resulting from design choices encoded
	   in design specifications.

	   _Maybe I want 'functions and sought characteristics of an artifact will be realized'_

	   =What they say in the slides:=
	   A Specification [that] is a description of a desired entity (Product?). It is historically dependent on
	   the existence of an Agent whose goal is the presence of such entity.
	   A Design Specification is the specification of a desired artifact. It specifies its qualities, features,
	   components (including the assembly relations between them) functionalities, materials, etc.


  /Assembly/ A Technical Artifact that is the mereological sum of two or more physical objects that are *at least*
	    /weakly connected/ to each other.

	    _I wonder whether, like Physical Object, they emphasize topological unity over functional unity._

   /Good/ a (tangible or intangible) object that has an economic value, over which ownership rights can
	    be established and whose ownership can be transferred from one agent to another.

  /Product/ a Good that is intended to be sold and delivered, and whose characteristics of sellability
	    and/or deliverability are the result of an intentional process. Such intentional process may be a
	    production process and/or a logistic process (e.g. transport & packaging).

  /Product Quality/ a DOLCE:Quality of a Product.

  /Manufacturing Machine/ _Indeed, this is only "mechanical machine"_

  /Customer/ an agent that is the addressee of a specific Offering relationship.
    *Find Offering relationship. I assume there is a DOLCE:Offering*
    _They are interested in the difference between Customer for whom you have an order and 'potential customer.'_

  /Plan/ a description of a kind of agentive process (i.e., a partially ordered set of events controlled by an agent)
	whose instances are expected to bring about an event (perdurant) of a certain type. [time is relevant]
	More exactly, this means that there exists an agent who believes that the occurrence of such process
	may bring about a desired event of a certain kind. The kind of desired event associated to a plan is
	called its Goal. _(my capitalization)_

	Any process occurrence complying with such description is said to /realize the plan/. A plan realization
	succeeds if the corresponding goal is achieved, and fails otherwise.

	Note: the term ‘process’ may denote either a type or a token. We assume here it is a token.

  /Task/ An action or process kind described or mentioned in an existing plan, whose execution is intended to be
	delegated to an agent. [should we rather use assignment?]
	Delegation may be strong or weak, depending on the level of control from the delegating agent. See
	Castelfranchi's work on delegation

	_I assume I'll find DOLCE:action and DOLCE:process; perhaps also DOLCE:agent, DOLCE:delegate, DOLCE:assign._

  /Business Process/ A DOLCE:Accomplishment that is the realization of a Business Plan
	(i.e., a Process Plan adopted by an d Organization)

	_It seems that we assume the Business Process is accomplished. Not a useful prespective._
	But then, they ask "The proposed definition excludes ongoing (not yet completed) processes to count
			    as a Business Processes. Is this correct?"
	So, the fault probably isn't with DOLCE.

  /Manufacturing Process/ A Business Process that involves Material Resources and Process Resources as participants,
	which is a [partial] realization of a Manufacturing Process Plan. A Manufacturing Process Plan is…

	Note: a manufacturing process may fail. In this case the realization is incomplete.
	Question: Is ‘manufacturing’ strictly bound to the creation or modification of product qualities/features?

(forall (?w0) (=> (WORLD ?w0) (MSD ?w0 TQ PD)))
** Part-whole relation (workforce and workforce by skill)

From Edinburgh notes:
! Unity meta-property (from DOLCE)
  – Considers the way in which the parts relate to the whole
  – A functional relation indicates unity
  – A constituent-of/stuff-of relation indicates no unity

Social objects (SOB) are Non-physical objects (NPOB) like banks. I don't think they are relevant here.

I think we just want to define aggregates that are the workforce and workforce with certain skills.

** SEP article on Artifacts:
 /This article is a good argument for NOT buying the book "Artefact Kinds"~/

Three conditions must be satisfied:
 (1) They must be intentionally produced. (I suppose "purposeful process").
 (2) They must involve modification of materials.
 (3) They must be produced for a purpose.  (I suppose "purposeful result").
    They argue that it need not be physical. (not a PED). e.g. musical performance and belief system.
    Not sure I'd say that these "involve modification of materials"

Most of the issues they bring up are not a problem for industrial use. They would be
for paleoarchaeologists. (The "continuum" problem, etc.)
* Bits about the axioms
** Universals and Particulars
  Gangemi points out that particulars can't have instances. [See Sweetening]
  These distinctions are not used in COLORE clif.
*** 4.1 of D18
   Universals. In some cases we shall quantify over properties, and hence one might believe
   we have to adopt a second-order logic. However, for our purpose, we need to quantify
   only over a finite list of predicates, those that are explicitly introduced in the present
   theory or in any theory that specializes (commits to) the present one. We follow therefore
   the strategy proposed by the Common Logic working group 27 , which is to view, under
   suitable conditions, a second-order axiom (or definition) as syntactic sugar for a finite list
   of first-order axioms (definitions). /The list is \Pi_x, the rigid universals defined in DOLCE./
   /This section introduces the predicate X./
** "Links between categories"
  These can be quite concise. For example, there is a mutual specific constant dependency
  between Temporal Qualities and perdurants.
  (forall (?w0) (=> (WORLD ?w0) (MSD ?w0 TQ PD)))
** Michael's paper is wrong about DOLCE not axiomatically distinguishing ACH,ACC,EV,STV.
   The axioms A75-A78 do this.
** From Borgo's "Foundational Choices in DOLCE" paper
 PRE(x,t) - x is present at time t.

 - Universalism: inst - instantiate (instance-of relation) - "My car and my pen both instantiate redness." /Not DOLCE-lite, I bet!/
 - Set Theoretic: member-of                                - "My car and my pen both belong to the class of red things."
    ST is extensional : classes with the same members are the same classes.
 - Trope - the way a property /inheres in/ the individual; represents the distinct way the individual has the property.
   Tropes cannot exist without the bearer.

   a1 I(t, x) ∧ I(t, y) → x = y /Because 'distinct way the individual has the property.'/
   a2 trope(t) → ∃x(I(t, x))    /Tropes cannot exist without a bearer./
** Of course, the use of worlds in the KIF implementation...
* DLP (DOLCE-Lite Plus)
** Bits
*** There are 15 :rdf/type in DLP; 6 are for informal theories.
(:edns/agent-driven-role
 :edns/description-role
 :edns/relation
 :edns/theory
 :owl/AnnotationProperty
 :owl/Class
 :owl/DatatypeProperty
 :owl/NamedIndividual  /This one doesn't have any instances; they were from nist.modelmeth./
 :owl/ObjectProperty
 :owl/Ontology
 :owl/Restriction
 :owl/TransitiveProperty
 :rdfs/Datatype
 :sem/communication-role
 :sem/semiotic-role)
*** Relations (owl:ObjectProperty) on :dol/particular (there are 51 of them)
**** Here are the 51 relations (:owl/ObjectProperty) that have :dol/particular as their domain.
#+begin_src clojure
   (-> (d/q '[:find [?name ...]
     :where
     [?res :rdf/type ?type]
     [?type :resource/id  :owl/ObjectProperty]
     [?res :rdfs/domain ?dom]
     [?dom :resource/id :dol/particular]
     [?res :resource/id ?name]]
     conn)
    sort)
(:dol/atomic-part
 :dol/atomic-part-of
 :dol/boundary
 :dol/boundary-of
 :dol/exact-location
 :dol/generic-constituent
 :dol/generic-constituent-of
 :dol/generic-dependent
 :dol/generic-location
 :dol/generic-location-of
 :dol/generically-dependent-on
 :dol/has-quality
 :dol/has-t-quality
 :dol/identity-c
 :dol/identity-n
 :dol/immediate-relation
 :dol/immediate-relation-i
 :dol/mediated-relation
 :dol/mediated-relation-i
 :dol/overlaps
 :dol/part
 :dol/part-of
 :dol/partly-compresent
 :dol/proper-part
 :dol/proper-part-of
 :dol/sibling-part
 :dol/spatio-temporally-present-at
 :dol/specific-constant-constituent
 :dol/specific-constant-constituent-of
 :dol/specific-constant-dependent
 :dol/specifically-constantly-dependent-on
 :dol/strong-connection
 :dol/weak-connection
 :edns/aboutness-of
 :edns/classified-by
 :edns/component
 :edns/component-of
 :edns/direct-predecessor
 :edns/direct-successor
 :edns/intensionally-referenced-by
 :edns/parametrized-by
 :edns/personified-by
 :edns/predecessor
 :edns/referenced-by
 :edns/setting
 :edns/successor
 :info/mapped-to
 :info/mapping-of
 :info/prototype
 :info/prototype-for
 :info/referred-by)
#+end_src
*** There are no :owl/NamedIndividual
(:model/OWLNamedIndividualfoo_0047
 :model/POD-edits-2016-09-19
 :model/POD-edits-2017-07-18
 :ops/BlockingProbability
 :ops/ProductionSystemEngineering)
*** mediated-relation
  Note also the -i; I'm printing the inverse relation below.
#+begin_src clojure
(res/pull-resource :dol/mediated-relation-i conn) ;==>
{:owl/inverseOf :dol/mediated-relation,
 :rdf/type :owl/ObjectProperty,
 :rdfs/comment
 ["A relation that composes other relations.
   For example, a participation relation composed with a representation relation.
   Composed relation cannot be directly expressed in OWL-DL,
   then (at least some) compositions are expressed as class or restriction axioms."],
 :rdfs/domain [:dol/particular],
 :rdfs/range [:dol/particular],
 :resource/id :dol/mediated-relation-i}
#+end_src
** From the comment on 3.9.4
   The backbone of the library is constituted by
  (1) DOLCE-Lite,
  (2) two sets of temporal relations defined over perdurants which are adapted from Allen's temporal calculus,
       and of spatial relations that simplify the expression of places and locations from particulars to regions, and
  (3) the DnS (Descriptions and Situations) ontology, which provides a vocabulary to talk of
      _reified entities such as relations, roles, contexts, situations, parameters, etc._
      Appropriate relations link DnS reifications to DOLCE-Lite non-reified entities.
  _Based on that backbone,_ other wide-scoping ontologies are provided:
  (4) ontology of information objects, based on semiotics, which provides a vocabulary to talk of languages,
      expressions vs. meaning, logical vs. physical documents, reference, etc.
  (5) a still preliminary and rough vocabulary for actions and agents and social units (persons, organizations);
  (6) _a well-developed ontology of plans and tasks_, containing also a set of individual tasks that provide grounded primitives to specify process types;
  (7) a preliminary ontology of functional participation relations, which provide a vocabulary
      for event-oriented relations encoded by linguistic verbs (in Western languages), like 'performs' or 'makes';
  (8) an ontology of collections and collectives;
  (9) a set of common sense mappings, introduced to support a mapping to WordNet (contained in another file).
      Besides these basic extensions, which are currently exploited in several application domains, and are actively under development,
      there are also some less developed ontologies, all bases on the backbone, but still at a preliminary and debatable stage.
      They are included here as placeholders, and are used by some applications, but they are not yet stable.

      *******Scope of DOLCE-Lite-Plus*******
     The lite versions of DOLCE are simplified translations of DOLCE into various logical languages.
     They are maintained for several reasons:
	1. allowing the implementation of DOLCE-based ontologies in languages that are less expressive than FOL.
	   In particular, DOLCE-Lite does not make use of S5 modalities and of some temporally-indexed relations.
	   Modal operators are not heavily exploited in DOLCE, then the consequences are not very harmful for most uses.
	   Temporal indexing is partly supported by composing originally indexed relations with temporal location relations.
	   Even this support is not provided for description logic versions of DOLCE-Lite like DAML+OIL, OWL-DL, etc.
	2. allowing a description-logic-like naming policy for DOLCE signature.
	   In many cases, different names are adopted for relations that have the same name but different arities in the FOL version,
	   or for relations that have polymorphic domains
	3. allowing extensions of DOLCE that do not have a detailed axiomatization yet, and modularizing them (placeholders)
	4. taking benefit of the services of certain implemented languages -specially the classification services provided by
	   description logics- in order to support domain applications The DLP ontology library is currently maintained in
	   two languages: _a dialect of KIF3.0 (PL), and DAML+OIL_. The first one contains a complete code for the library,
	   including theWordNet alignment modules. The second one contains the library (according to available costructs of DAML+OIL)
	   without the WordNet code, since it is very simple and takes much space. DLP+KIF is currently used in some applications
	   that need deep inferences, which can only be provided by expressive, logic-programming-enabled languages.
	   DLP+DAML is currently used in Semantic Web applications, for example in the Core Ontology for Services (COS).
	   The extensions to DOLCE presented in the library are work in progress, and although some of them have been tested
	   in realistic applications, they should be taken cautiously from the viewpoint of rigorous formal ontology.
*** My take-away from the above
**** DnS (Descriptions and Situations) is a layer above (more upper ontology) than stuff like plans.
       AND it contains relations, roles, contexts, situations and parameters -- _The stuff I need!_
**** Plans and tasks are considered "well-developed"
      I will look into this /set of individual tasks that provide grounded primitives to specify process types/
      What "process types" would I need? I'm guessing: batching, do it until it meets specs, do it subtasks,
** Investigation using pdenno.owl-db-tools
*** Some EDNS concepts
#+begin_src clojure
   ;;; :edns/relation and theory
   {:rdf/type :owl/Class,
    :rdfs/comment
    ["A non-social relation(ship): formal, linguistic, etc. It is considered here a theory,
       because relations are established in order to give an ordering to some reality."],
    :rdfs/subClassOf [:edns/theory],
    :resource/id :edns/relation}

  {:rdf/type :owl/Class,
   :rdfs/comment
   ["This is used in a wide cultural sense: a theory about something, expressed in a rather systematic way,
       but not necessarily public (although communicable in principle).
       An axiomatic theory is not a theory in this sense, although we can expect an axiomatic theory to be
       the formal representation of a generic theory."],
   :rdfs/subClassOf [:edns/description],
   :resource/id :edns/theory}

  {:owl/disjointWith [:edns/collection :edns/situation :edns/information-object :edns/non-agentive-figure :edns/concept],
   :rdf/type :owl/Class,
   :rdfs/comment
   ["A description is a social object which represents a conceptualization (e.g. a mental object or state),
      hence it is generically dependent on some agent and communicable.
      Descriptions define or use concepts or figures, are expressed by an information object and can be satisfied by situations.
      The typology of descriptions is still preliminary."],
   :rdfs/subClassOf
   [:edns/non-agentive-social-object
    {:owl/onProperty :edns/d-uses,         :owl/someValuesFrom [{:owl/unionOf [:edns/figure :edns/concept], :rdf/type :owl/Class}],
					   :rdf/type :owl/Restriction}
    {:owl/onProperty :edns/expressed-by,   :owl/someValuesFrom [:edns/information-object], :rdf/type :owl/Restriction}
    {:owl/onProperty :edns/refined-by,     :owl/allValuesFrom [:edns/description], :rdf/type :owl/Restriction}
    {:owl/onProperty :edns/specialized-by, :owl/allValuesFrom [:edns/description],  :rdf/type :owl/Restriction}],
   :resource/id :edns/description}
#+end_src
** From modeling/operations investigation
*** DLP ToDo
**** Kinds of models
   In addition to the descriptive / predictive / subscriptive dimension
   there is mental   / formally encoded
	    symbolic / associative

   In addition to
**** BlockedResource / StarvedResource
   Constraints are needed here to point out that only resources that are in some sense "agentive" (they have goals) can be blocked or starved.
   So the ToDo here is to (1) determine what sort of object should be associated with Resource and to write a constraint that links it.

*** DLP DnS
**** Basics
   causal-role says: /Causal notions are still primitive in this version of DLP./
**** The example theory : s-communication-theory
   It says "Jakobson defined six functions of communication that are compatible with Shannon's theory of information.
   They are the _message_, here covered by 'Message-Role', the _context_, covered here by 'C-Context', the _code_, covered by 'Code', plus 'Channel',
   'Encoder', and 'Decoder', which are introduced below. Message-Role, C-Context, and Code can also be viewed as playing a semiotic role
   (Expression, S-Context, Semiotic-Code). For a communication theory in general, we also need other components that are not specified in
   Jakobson's theory', e.g. 'turn-taking', governing the sequence of a communication process,  'communication parameters', governing the values
   that participants and events of a communication should have in order for the communication to be  successful (i.e. for the communication method
   to be satisfied), 'conversational maxims' (superordered theories) that provide guidelines for communication to be successful, etc."

   _This actually sounds interesting in itself!_ Some of the roles they are talking about can be found as instances of communication-role.

**** functional-role - a concept that classifies endurants.
   Also known as 'functional role'. A concept that classifies (in particular, it is 'played by') endurants, as used in some description.
   Roles are the descriptive counterpart of endurants, and, as endurants participate in perdurants, they usually have courses as modal targets (see).
   _The typology of roles is still preliminary._

**** parameter  ~parameter~ is the descriptive counterpart of ~regions~.
   /A concept that classifies (in particular, it is 'valued by') regions, as defined by some description./
   /Parameters are the descriptive counterpart of regions, and, as regions represent the qualities of perdurants or endurants,/
   /they can be requisites for some role or course. A parameter has at least one region that is a value for it./

**** course  ~course~ is the descriptive counterpart of ~perdurant~.
   /A concept that classifies (in particular, it 'sequences') perdurants (processes, events, or states), as a component of some description./
   /Courses are the descriptive counterpart of perdurants, and, since perdurants have endurants as participants, they are usually the function of some role./


Likewise "course is the descriptive counterpart of perdurant.
*** DLP Definitions (better than OWLdocs?)
**** collection (in EDnS)
   Collections are social objects which, although not defined by a description, depend both on member entities and on some concepts or figures,
   hence indirectly on descriptions. While we could talk in general of collections of any kind of entities (events, objects, abstracts, etc.),
   we restrict here our attention to collections of endurants, and to the concepts that classify them (i.e. roles).
   /Most of the subtypes are in Collections.owl, collection is in EDnS./
***** non-physical-collection
    "A collection of non-physical objects that is characterized by a conventional or emergent property, _e.g. a corpus, a legal body, etc._
     A non-physical collection only has non-physical endurants as members."
****** information-collection
     "A collection of texts"
***** organized-collection
    "Organized collections introduce a different unity criterion for collections. They can be conceived as characterized by
     _further roles played by some (or all) members of the collection,_ and related among them through the social objects
     (figures, descriptions, collections) that either use or depute or are covered by them."
     /I'm guessing a football team would be an organized-collection./
***** simple-collection
    "A simple collection (for instance, a collection of saxophones, or a mass of lymphocytes ) is a collection having only _covering roles_."
     /covering roles?/
****** taxonomic-collection
     "A simple collection covered by roles corresponding to natural science properties ascribed to members."
**** description
    "A description is a social object which represents a conceptualization (e.g. a mental object or state), hence it is generically dependent on some agent and communicable.
     Descriptions define or use concepts or figures, are expressed by an information object and can be satisfied by situations.
     The typology of descriptions is still preliminary."

     Interesting relation here are:
     SubClassOf:
     ~d-use some (concept or figure)~ which says that a description and descriptively use a concept or figure.
     ~expressed-by some information-object~ this is going to be =important to nb-agent!= There MUST be an information object!
     ~refined-by only description~
     ~specialized-by only description~

     Note because of the OWA it is not necessary that you actually (for example) find the associated information-object.
     Likewise the two ~only~ (universal restrictions) are only saying that ever description can be refined or specialized by another.
***** description
    "A domain of knowledge, typically expressed by one term, related to other subjects in a partial order hierarchy and with some topological properties; e.g. biology, sport, politics."




**** situation (in EDnS) =(satisfies some description)=
   "A situation is a social object that appears in the domain of an ontology only because there is a
    _description whose components can 'carve up' a view (setting) on that domain_.
    A situation _has to satisfy a description_ (see below for ways of defining the satisfies relation), and it
    _has to be setting for at least one entity_. In other words, it is the ontological counterpart
    (with due local differences or restrictions) of settings (situations from SC, contexts, episodes, states of affairs, structures,
    configurations, cases, etc.).
    - A perdurant is usually the only mandatory constituent of a setting.
    - Two descriptions of a same situation are possible, otherwise we would result in a solipsistic ontology.
    - The time and space (and possibly other qualities) of a situation are the time and space of the perdurants in the setting."
     situation =  ~non-agentive-social-object and (satisfies some description) and (setting-for some particular)~
    /Under situation I define InhibitingSituation and put Blocked and Starved in it./
    ~non-agentive-social-object and (satisfies some description) and (setting-for some particular)~
***** goal-situation
    "A goal situation is a situation that satisfies a goal. Opposite to the case of subplan executions, a goal situation is
     not part of a plan execution. In other words, it is not true in general that any situation satisfying a part of a description,
     is also part of the situation that satisfies the whole description. This helps to account for the following cases:
       a) Execution of plans containing abort or _suspension conditions_ (the plan would be satisfied even if the goal has not been reached, see below),
       b) Incidental satisfaction, like when a situation satisfies a goal without being intentionally planned (but anyway desired)."
       ~situation and (satisfies some goal)~ there must exist a goal that the goal-situation satisfies.
       ~satisfies~ is inverse of ~satisfied-by~ which has the following definition.
****** satisfied-by relation =Important!=
     "See also comment on 'satisfies' for a different explanation. /NOPE, it says see satisfied-by!/
      _This is the primitive relation between descriptions and situations._
      _It can be understood as a reification of the 'satisfiability' relation of formal semantics that holds between theories and models._
      A theory is reified as a description, thus acquiring a life-cycle: a theory can be changed, versioned, discussed, issued, etc.
     'Theory' can be a 'potential' theory in the sense that most conceptualizations that could be formalized, could also be reified,
      e.g. plans, norms, stories, projects, diagnoses, methods, etc.
      No position is taken on the extensionality of descriptions.
      For example, if a theory is required to be reified in fine detail, if it changes an axiom, it could be considered no more the same theory.
      On the other hand, if theories are reified without such a strong assumption, some axioms can be changed just like non-essential parts
      of physical objects, with the theory preserving its identity.
      In case a theory is considered extensional, it might be considered a member of a class of 'theory changing history'.
      The 'refines' relation provides this possibility.
      A model is reified as a situation, thus a *class* of models that can satisfy a theory is reified as a situation type (class).
      Situations can depend on descriptions, but not vice-versa (constructivist stance).
      Components of descriptions 'classify' entities of situations.
      There are at least three satisfaction subrelations, and a lot of conditions can be stated for allowing an automatic matching of satisfaction.
      See the FOL version of DLP for details."

** DNS (Descriptions and Situations)
*** Basics
   causal-role says: /Causal notions are still primitive in this version of DLP./
*** The example theory : s-communication-theory
   It says "Jakobson defined six functions of communication that are compatible with Shannon's theory of information.
   They are the _message_, here covered by 'Message-Role', the _context_, covered here by 'C-Context', the _code_, covered by 'Code', plus 'Channel',
   'Encoder', and 'Decoder', which are introduced below. Message-Role, C-Context, and Code can also be viewed as playing a semiotic role
   (Expression, S-Context, Semiotic-Code). For a communication theory in general, we also need other components that are not specified in
   Jakobson's theory', e.g. 'turn-taking', governing the sequence of a communication process,  'communication parameters', governing the values
   that participants and events of a communication should have in order for the communication to be  successful (i.e. for the communication method
   to be satisfied), 'conversational maxims' (superordered theories) that provide guidelines for communication to be successful, etc."

   _This actually sounds interesting in itself!_ Some of the roles they are talking about can be found as instances of communication-role.
*** functional-role - a concept that classifies endurants.
   Also known as 'functional role'. A concept that classifies (in particular, it is 'played by') endurants, as used in some description.
   Roles are the descriptive counterpart of endurants, and, as endurants participate in perdurants, they usually have courses as modal targets (see).
   _The typology of roles is still preliminary._

*** parameter  ~parameter~ is the descriptive counterpart of ~regions~.
   /A concept that classifies (in particular, it is 'valued by') regions, as defined by some description./
   /Parameters are the descriptive counterpart of regions, and, as regions represent the qualities of perdurants or endurants,/
   /they can be requisites for some role or course. A parameter has at least one region that is a value for it./

*** course  ~course~ is the descriptive counterpart of ~perdurant~.
   /A concept that classifies (in particular, it 'sequences') perdurants (processes, events, or states), as a component of some description./
   /Courses are the descriptive counterpart of perdurants, and, since perdurants have endurants as participants, they are usually the function of some role./
   Likewise "course is the descriptive counterpart of perdurant.
** DLP Definitions (better than OWLdocs?)
*** collection (in EDnS)
   Collections are social objects which, although not defined by a description, depend both on member entities and on some concepts or figures,
   hence indirectly on descriptions. While we could talk in general of collections of any kind of entities (events, objects, abstracts, etc.),
   we restrict here our attention to collections of endurants, and to the concepts that classify them (i.e. roles).
   /Most of the subtypes are in Collections.owl, collection is in EDnS./
**** non-physical-collection
    "A collection of non-physical objects that is characterized by a conventional or emergent property, _e.g. a corpus, a legal body, etc._
     A non-physical collection only has non-physical endurants as members."
***** information-collection
     "A collection of texts"
**** organized-collection
    "Organized collections introduce a different unity criterion for collections. They can be conceived as characterized by
     _further roles played by some (or all) members of the collection,_ and related among them through the social objects
     (figures, descriptions, collections) that either use or depute or are covered by them."
     /I'm guessing a football team would be an organized-collection./
**** simple-collection
    "A simple collection (for instance, a collection of saxophones, or a mass of lymphocytes ) is a collection having only _covering roles_."
     /covering roles?/
***** taxonomic-collection
     "A simple collection covered by roles corresponding to natural science properties ascribed to members."
*** description
    "A description is a social object which represents a conceptualization (e.g. a mental object or state), hence it is generically dependent on some agent and communicable.
     Descriptions define or use concepts or figures, are expressed by an information object and can be satisfied by situations.
     The typology of descriptions is still preliminary."

     Interesting relation here are:
     SubClassOf:
     ~d-use some (concept or figure)~ which says that a description and descriptively use a concept or figure.
     ~expressed-by some information-object~ this is going to be =important to nb-agent!= There MUST be an information object!
     ~refined-by only description~
     ~specialized-by only description~

     Note because of the OWA it is not necessary that you actually (for example) find the associated information-object.
     Likewise the two ~only~ (universal restrictions) are only saying that ever description can be refined or specialized by another.
**** description
    "A domain of knowledge, typically expressed by one term, related to other subjects in a partial order hierarchy and with some topological properties; e.g. biology, sport, politics."

*** situation (in EDnS) =(satisfies some description)=
   "A situation is a social object that appears in the domain of an ontology only because there is a
    _description whose components can 'carve up' a view (setting) on that domain_.
    A situation _has to satisfy a description_ (see below for ways of defining the satisfies relation), and it
    _has to be setting for at least one entity_. In other words, it is the ontological counterpart
    (with due local differences or restrictions) of settings (situations from SC, contexts, episodes, states of affairs, structures,
    configurations, cases, etc.).
    - A perdurant is usually the only mandatory constituent of a setting.
    - Two descriptions of a same situation are possible, otherwise we would result in a solipsistic ontology.
    - The time and space (and possibly other qualities) of a situation are the time and space of the perdurants in the setting."
     situation =  ~non-agentive-social-object and (satisfies some description) and (setting-for some particular)~
    /Under situation I define InhibitingSituation and put Blocked and Starved in it./
    ~non-agentive-social-object and (satisfies some description) and (setting-for some particular)~
**** goal-situation
    "A goal situation is a situation that satisfies a goal. Opposite to the case of subplan executions, a goal situation is
     not part of a plan execution. In other words, it is not true in general that any situation satisfying a part of a description,
     is also part of the situation that satisfies the whole description. This helps to account for the following cases:
       a) Execution of plans containing abort or _suspension conditions_ (the plan would be satisfied even if the goal has not been reached, see below),
       b) Incidental satisfaction, like when a situation satisfies a goal without being intentionally planned (but anyway desired)."
       ~situation and (satisfies some goal)~ there must exist a goal that the goal-situation satisfies.
       ~satisfies~ is inverse of ~satisfied-by~ which has the following definition.
***** satisfied-by relation =Important!=
     "See also comment on 'satisfies' for a different explanation. /NOPE, it says see satisfied-by!/
      _This is the primitive relation between descriptions and situations._
      _It can be understood as a reification of the 'satisfiability' relation of formal semantics that holds between theories and models._
      A theory is reified as a description, thus acquiring a life-cycle: a theory can be changed, versioned, discussed, issued, etc.
     'Theory' can be a 'potential' theory in the sense that most conceptualizations that could be formalized, could also be reified,
      e.g. plans, norms, stories, projects, diagnoses, methods, etc.
      No position is taken on the extensionality of descriptions.
      For example, if a theory is required to be reified in fine detail, if it changes an axiom, it could be considered no more the same theory.
      On the other hand, if theories are reified without such a strong assumption, some axioms can be changed just like non-essential parts
      of physical objects, with the theory preserving its identity.
      In case a theory is considered extensional, it might be considered a member of a class of 'theory changing history'.
      The 'refines' relation provides this possibility.
      A model is reified as a situation, thus a *class* of models that can satisfy a theory is reified as a situation type (class).
      Situations can depend on descriptions, but not vice-versa (constructivist stance).
      Components of descriptions 'classify' entities of situations.
      There are at least three satisfaction subrelations, and a lot of conditions can be stated for allowing an automatic matching of satisfaction.
      See the FOL version of DLP for details."
* OntoClean - Nicola Guarino
** Metaproperties
A property is ~essential~ if it must be true of it in every possible world. (It "necessarily holds" for that entity.)

A property is ~rigid~ if it essential to all possible instances.

Two kinds of non-rigid:
A property is ~semi-rigid~ if it is essential to some entities and not others.      (having a brain in a Wizard of Oz world.)
A property is ~anti-rigid~ if it is not essential to all its instances.             (being a student)

Anti-rigid properties cannot subsume rigid properties.

IC is "identity criteria"

~R is non-rigid
~U cannot subsume +U     (living beings can change parts and remain the same, amounts of matter cannot.)

"mono-hierarchy principle" (from BFO): "classes carrying incompatible identity/unity criteria are disjoint."
Nicola's definition.
* Basic Premises of DOLCE
 From Wikipedia: As implied by its acronym, DOLCE is oriented toward capturing the ontological categories
   underlying natural language and human common sense. DOLCE, however, does not commit to a strictly _referentialist_
   metaphysics related to the intrinsic nature of the world. Rather, the categories it introduces are thought of as
   _cognitive artifacts_, which are ultimately depending on human perception, cultural imprints, and social conventions.
   In this sense, they intend to be just descriptive (vs prescriptive) notions, that assist in making already
   formed conceptualizations explicit. /This is exactly what I'm after in formulating analytical models./
   /This paraphrases a quote in Sweetening Ontologies with DOLCE./

 Footonte on "referentialist" A direct reference theory (also called referentialism[1] or referential realism)[2]
  is a theory of language that claims that the _meaning of a word or expression lies in what it points out in the world_.[3]
  The object denoted by a word is called its referent. Criticisms of this position are often associated with
  Ludwig Wittgenstein.[1] /This surprises me, since he said "meaning is what an explanation of meaining explains."/

  The term I was looking for wasn't "referentialist" it was "revisionary". Mentioned in Gangemi's Sweetening Ontologies"

  See Strawson, P. F.: Individuals. An Essay in Descriptive Metaphysics. Routledge, London and New York (1959)
** The formalization (my observations about the kif)
*** Brevity
   You can't expect much from the defrelations themselves. P, K, PC, qt, ql all are nothing but
   statements that their arguments are Particulars. YOu have to look at other axioms that use them
*** Endurants don't have parts (see A1)
    Only Abstract (AB) and Perdurants (PD) have parts. An AB's parts are AB. A PD's parts are PD.
*** What is an example function in DOLCE? sigma (and sigma.t) are how it represents functions?
    It is NOT the case that '?f' means function; ?f is the first choice for pretty much every universal.
#+BEGIN_SRC clojure
;;; (NA19) Existence of sigma
    (forall (?w0 ?f)
	    (=> (and (UNIVERSAL ?f) (WORLD ?w0))
		(exists (?z) (and (PARTICULAR ?z) (sigma ?w0 ?f ?z)))))
#+END_SRC
*** Rigid universals
    I'm struggling with this one! ... *DUH! Relation X means it is a Rigid Univeral. See defrelation X.*
    Still more struggling... then... How about this?
#+BEGIN_SRC clojure
;;; (NA15) --axiom
;;; POD: Rigid means true in all worlds. Notice (forall (?w ...))
;;;      If it is a universal AND true in all worlds, it is either one we know about (X ?f)
;;;      or it meets the conditions of RG in all worlds.
     (forall (?w ?f) (=> (and (UNIVERSAL ?f) (WORLD ?w))
			 (or (not (X ?f))  ; (X ?f) => (RG ?f)
			     (RG ?w ?f))))
#+END_SRC

** typehood
 "two conditions need to be satisfied for a property to single out a genuine
  ontological category (a type in Nicola's terminology):
    (1) the property must be rigid (essential to all instances)
    (2) the property must supply some common individuation and persistence conditions for its instances.
  "In my opinion, none of these conditions are satisfied for the property 'being an artefact.'  [From the artefacts paper.]
** Possibilia
  See D18 first paragraphs of Chapter 4. Formalization relies on a simple quantified modal logic, S5 plus the Barcan formula.
  [[https://plato.stanford.edu/entries/actualism/index.html][Chris Menzel's chapter on SEP]] might help understand this.
  Indeed the square is "necessarily", the diamond is ???
  Barcan's formula [[https://plato.stanford.edu/entries/actualism/proofBF.html][Chris Menzel's proof of the Barcan Formula]] says that
   forall x Nec (\phi) --> Nec forall x (\phi)
  If \phi here a propostion or a universal? (Or does it not matter?...a unary proposition representing a universal).

** Physical object
  Note: the Dolce notion of Physical Object presupposes a strong topological unity (differently from the
  functional unity presupposed for BFO objects)
  /This is surprising to me; I'd expect DOLCE to emphasize functional unity./
* Colore CLIF of DOLCE
** Universals and particulars (D18 vs. COLORE CLIF v. the KIF)
   (cl-comment 'Comment: DOLCE axioms from 4.1 Taxonomic Constraints')
   (forall (x) (if (or (ED x) (PD x) (Q x) (AB x)) (PT x)))
   /The text in 4.1 doesn't even state these formally. Rather, it says to read Figure 2 as/
   /asserting PT (partition) where all the subtypes are provided, and SB to the parent otherwise./

   Universal means that it can have instances. In fact, it has to have instances.
   Instances are particulars, but then everything in DOLCE is a particular. There is a partitioning
   partitioning:   (PT ED PD Q AB)

;;; (D2) NEP: Non-Empty Universal
(defrelation NEP (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (forall (?w)
	       (=> (and (WLDR ?w0 ?w) (WORLD ?w))
		   (exists (?y)
			   (and (PARTICULAR ?y) (?f ?w ?y)))))))

** Bugs?
*** The only place it uses SB is in dolce_mereology.clif *Nope, that's a comment.*
** Parts of DOLCE
*** From COLORE?
**** dolce_core.clif
  This contains definition of axioms like overlap, symmetry, transitivity. But I don't
  see where a predicate symbol is associated with the thing. I am guessing tha none is needed
  since they are some meta-level axioms???

  [[https://github.com/gruninger/colore/blob/master/ontologies/dolce/conversions/dolce_core.all.p9][Here is DOLCE core in Prover9]]
  [[https://github.com/gruninger/colore/blob/master/ontologies/dolce/consistency/readme.txt][README about stuff in that directory]]

#+BEGIN_SRC clojure
(cl-comment 'Identifier: dolcecore_A2')
(cl-comment 'Transitivity')
(forall (x y z)
		(if (and (P x y)(P y z))
			(P x z)))
#+END_SRC clojure

Okay, so I'm revisiting the core
O = overlap,
Sum = binary sum
P = Part
.. Fine but then Transitivity doesn't use anything new, and O is used here (Dissectivity) as a unary.
(forall (x y)
	(if (and (O y)(P x y))
			(O x)))
**** dolce_constitution.clif
  Regarding the comments above about meta-level axioms, nope!

* Use Case
I am giving my self exactly one week from NOW <2019-03-01 Fri>, 13:35.
To get a draft paper out about representing Peckham's problem in DOLCE.
<2019-03-08 Fri>: I'm going to finish it tomorrow, I think!
 /This was a mistake. The paper is still in ERB <2022-01-01 Sat> !/
* dolce-kif.clj
#+begin_src clojure
(ns pdenno.nb-agent.dolce-kif
  "DOLCE ontology in KIF"
  (:require [pdenno.purefoo.util :as util :refer [ppp ppprint]]))

;;; This file has been annotated and slightly updated by Peter Denno. (See comments containint 'POD').
;;; All defrelations are original.
;;; The following comment, delimited by ==== was in the original 2003 definition
;;;=============================================================================================================

;;; DOLCE (V2.1) in KIF (text format)
;;; 31 December 2003

;;; THIS IS A TRANSLATION IN KIF (ACCORDING TO THE KIF-DRAFT
;;; PROPOSED TO THE AMERICAN NATIONAL STANDARD NCITS.T2/98-004
;;; http://logic.stanford.edu/kif/dpans.html) OF DOLCE V2.1

;;; For comments on this version, please contact:
;;; borgo@loa-cnr.it

;;; Changes:
;;; (D13) changed WORD into WORLD -Typo
;;; (NA3)-(NA9) have been dropped -These occur already somewhere else
;;; (NA10)-(NA12) are left as comments -These are guaranteed by def. (ND5)
;;; (NA13) has been dropped -It follows from (NA14) and (D2)
;;;=============================================================================================================

;;;  % is "conincident" or "anti-"

;;; Here is Table 3 "Qualities and quality regions" from D18. It describes argument types:
;;;
;;; Parthood:            “x is part of y”                  P(x, y)     → (AB(x) ∨ PD(x)) ∧ (AB(y) ∨ PD(y))
;;; Temporary Parthood:  “x is part of y during t”         P(x, y, t)  → (ED(x) ∧ ED(y) ∧ T(t))
;;; Constitution:        “x constitutes y during t”        K(x, y, t)  → ((ED(x) ∨ PD(x)) ∧ (ED(y) ∨ PD(y)) ∧ T(t))
;;; Participation:       “x participates in y during t”    PC(x, y, t) → (ED(x) ∧ PD(y) ∧ T(t))
;;; Quality:             “x is a quality of y”             qt(x, y)    → (Q(x) ∧ (Q(y) ∨ ED(y) ∨ PD(y)))
;;; Quale:               “x is the quale of y (during t)”  ql(x, y)    → (TR(x) ∧ TQ(y))
;;;                                                        ql(x, y, t) → ((PR(x) ∨ AR(x)) ∧ (PQ(y) ∨ AQ(y)) ∧ T(t))

;;; POD All of this is mine.
(def notes ; Some from Figure 2, Page 18 of D18, but there is some different usage there (e.g. PT is particular)
  {:relations
   {'P         {:name "Parthood, Temporary Parthood, both primitive relations."
		:description "The 'part of' relation"},
    'K         {:name "Constitution, a primitive relation"
		:description "Figure 5 of D18 is a good overview of the 'Constitution/(Spatial) Dependency
		relations between basic categories'."},
    'PC        {:name "Participation, a primitive relation."
		:decription
		"In DOLCE, the main relation between Endurants and Perdurants is that of Participation:
		 an Endurant 'lives' in time by participating in some Perdurant(s)."},
    'qt        {:name "Quality, a primitive relation"
		:description
		"The first (non-world) argument [of this relation] is always a Quality;
		 the second argument is a Quality, Perdurant or Endurant (possessing the quality)."},
    'ql        {:name "Quale, Temporal Quale, both primitive relations"
		:description
		"Typical dictionary definition: a quality or property as perceived or experienced by a person.
		 (plural qualia).
		 DOLCE distinguishes between a quality (e.g., the color of a specific rose), and its “value”
		 (e.g., a particular shade of red). The latter is called quale, and describes the position of
		 an individual quality within a certain conceptual space (called here quality region, R).
		 So when we say that two roses have (exactly) the same color, we mean that their color qualities,
		 WHICH ARE DISTINCT, have the same position in the color space, that is they have the same color quale.
		 Given all this, it is obvious that there is no quale rigid universal.

		 Me: Every particular has its own distict Qualities. Individuals may share a quale (relationship) which
		 associates with their (distinct) Qualities a shared Quality Region."},
    'RG        {:name "Rigid Universal"
		:description
		"Rigid it is essential (true in every possible world, it necessarily hold) to all instances. (See ONTOCLEAN)
		 Universal means it can have instances."},
    'X         {:name "The set of known Rigid Univerals"},
    'NEP       {:name "Non-empty Universal"},
    'DJ        {:name "Disjoint Universal"},
    'SB        {:name "Subsumption"},
    'PSB       {:name "Properly Subsuming"},
    'EQ        {:name "Equal Universals"},
    'L         {:name "Leaf Universal"},
    'SBL       {:name "Leaf Subsumed By"},
    'PSBL      {:name "Leaf Properly Subsumed By"},
    'L.X       {:name "Leaf In The Set X"},
    'SBL.X     {:name "Leaf Subsumed By (set)"},
    'PSBL.X    {:name "Leaf Properly Subsumed By (set)"},
    'PT        {:name "Partition"
		:description
		"PT is left for expressivity. In practice it becomes superfluous since the user needs to give a list
		 of the n-tuple satisfying the relation PT in axiom NA17 (defining subsumption (SB) for all the known RGs."},
    'PP        {:name "Proper Part, Temporary Proper Part"},
    'O         {:name "Overlap, Temporal Overlap"},
    'At        {:name "Atom, Temporary Atom"},
    'AtP       {:name "Atomic Part, Temporary Atomic Part"}
    '+         {:name "Binary Sum"},
    'sigma     {:name "General Sum"},
    '%.t       {:name "Coincidence"},
    'CP        {:name "Constant Part"},
    'sigma.t   {:name :?},
    'dqt       {:name "Direct Quality"},
    'qtf       {:name "Quality of type"},
    'ql.T.PD   {:name "Temporal and Spatial Quale. Relation on temporal quale (primitive)  X PD"},
    'ql.T.ED   {:name :?},
    'ql.T.TQ   {:name "Temporal Quale, temporal quality"},
    'ql.T.PQAQ {:name "Temporal Quale, Physical or Abstract Quantity"},
    'ql.T.Q    {:name "Temporal Quale, Quality"},
    'ql.T      {:name "Temporal Quale"
		:description "The temporal quale relation is not defined on abstract entities."},
    'ql.S      {:name "Spatial Quale"
		:description
		 "The spatial quale relation is not defined on non-physical endurants, abstract qualities, non-physical
		 perdurants (i.e. perdurants that have only non-physical participants), or abstract entities.
		 It is covered by the three relationships ql.S.PED, ql.S.PQ, ql.S.PD."},
    'ql.S.PED  {:name "Spatial Quale, Physical Endurant"},
    'ql.S.PQ   {:name "Spatial Quale, Physical Quality"},
    'ql.S.PD   {:name "Spatial Quale, Perdurant"},
    'GK        {:name "Constantly Generically Constituted by"},
    'GD        {:name "Constantly Generically Dependent on"
		:description
		"A property φ is generically constantly dependent on a property ψ iff, for any instance x of
		 φ, at any time t, x can’t be present at t, unless a certain instance y of ψ is also present at t.
		 For example, a person might be generically constantly dependent on having a heart."}
    'HOM       {:name "Homeomerous"
		:description
		"By (D59), a universal property is homeomeric if it is a Perdurant such that if it
		 is present at t it is present in all the parts of t."}
    }
   :rigid-universals
   {
    ;; From D18 Figure 2, Page 14.
    'ED {:name "Endurant"
	 :description
	 "Endurants are wholly present (i.e., all their proper parts are present) at any time they are present.
	  Perdurants, on the other hand, just extend in time by accumulating different temporal parts, so
	  that, at any time they are present, they are only partially present, in the sense that some
	  of their proper temporal parts (e.g., their previous or future phases) may be not present.

	  Endurants are entities that 'are in time', while lacking however temporal parts
	  (so to speak, all their parts flow with them in time).

	  The parts of an endurant can only be determined relative to something else (e.g. time).
	  Indeed, a statement like “this keyboard is part of my computer” is incomplete unless you specify
	  a particular time, while “my youth is part of my life” does not require such a specification

	  An endurant is 'mereologically constant' iff all its parts remains the same during its
	  life, and 'mereologically invariant' iff they remain the same across all possible worlds."}
    'PD {:name "Perdurant"
	 :description
	 "Perdurants, on the other hand, just extend in time by accumulating different temporal parts, so
	  that, at any time they are present, they are only partially present, in the sense that some
	  of their proper temporal parts (e.g., their previous or future phases) may be not present.
	  'Perdurants *happen* in time.'

	  In DOLCE, the main relation between endurants and perdurants is that of participation:
	  an endurant “lives” in time by participating in some perdurant(s)."}
    'Q  {:name "Quality"
	 :description
	 "‘Quality’ is often used as a synonym of ‘property’, but this is not the case in DOLCE: QUALITIES
	  ARE PARTICULARS, PROPERTIES ARE UNIVERSALS. Qualities inhere to entities: every entity (including
	  qualities themselves) comes with certain qualities, which EXIST AS LONG AS THE ENTITY EXISTS.
	  Within a certain ontology, we assume that these qualities belong to a finite set of quality types
	  (like color, size, smell, etc., corresponding to the “leaves” of the quality taxonomy shown in Figure 2),
	  and are characteristic for (inhere in) specific individuals: no two particulars can have the same quality (a43),
	  and each quality is specifically constantly dependent (see below) on the entity it inheres in: at any time,
	  a quality can’t be present unless the entity it inheres in is also present. So we distinguish between a quality
	  (e.g., the color of a specific rose), and its “value” (e.g., a particular shade of red).
	  The latter is called quale, and describes the position of an individual quality within a certain
	  conceptual space (called here quality region) [was 'quality space']. So when we say that two roses have
	  (exactly) the same color, we mean that their color qualities, which are distinct, have the same position
	  in the color space, that is they have the same color quale.

	 (a43): Two things with the same Quality are the same thing."}
    'AB {:name "Abstract"
	 :description
	 "Not located in space-time. No inherent spatial or temporal location.
	  Abstract entities are not Qualities themselves. There is only one subtype
	  There is only one subtype considered in DOLCE, Quality Region (AKA Region)."}

    'PED  {:name "Physical Endurant"}   ; of Endurant
    'NPED {:name "Non-physical Endurant"}
    'AS   {:name "Arbitrary Sum"}

    'EV   {:name "Event"               ; of Perdurant
	   :description
	   "An occurrence-type (PD) is stative or eventive according to whether it holds of the mereological sum
	    of two of its instances, i.e. if it is cumulative or not. A walk from one place to another is eventive
	    since no proper part of it is itself a walk between the two places.
	    anti-cumulative (A75) and (A76).
	    Mnemonic: Eventive ends in an event; stative is the the same all the way through."},

    'STV  {:name "Stative"
	   :description
	   "An occurrence-type (PD) is stative or eventive according to whether it holds of the mereological sum
	    of two of its instances, i.e. if it is cumulative or not. A sitting occurrence is stative since
	    the sum of two sittings is still a sitting occurrence.
	    cumulative (A77) and (A78)."},

    'TQ   {:name "Temporal Quality"    ; of Quality
	   :description "Temporal Qualities directly inhere to Perdurants (PD)."},
    'PQ   {:name "Physical Quality"
	   :description "Physical Qualities directly inhere to Physical Endurants (PED)."},
    'AQ   {:name "Abstract Quality"
	   :description
	   "Abstract Qualities directly inhere to non-physical perdurants
	    (which is not a formal category of DOLCE). 'We are aware that, unfortunately, this terminology
	    is very problematic: for instance, it should be clear that abstract qualities are NOT abstract,
	    since they have a temporal location. Better suggestions are welcome."}

    'Fact {:name "Fact"                ; of Abstract
	   :description "Fact and Set are example Abstract entities. DOLCE is silent on their meaning."},
    'Set  {:name "Set"
	   :description "Fact and Set are example Abstract entities. DOLCE is silent on their meaning."},
    'R    {:name "Region"
	   :description "AKA quality region. An subtype of Abstract."},

    'M    {:name "Amount of Matter"},    ; of Physical Endurant
    'F    {:name "Feature"
	   :description "Parasitic physical entities. Features have qualties; qualities have no features."},
    'POB  {:name "Physical Object"
	   :description
	   "The main characteristic of objects is that they are endurants with unity. However, they have
	    no common unity criterion, since different subtypes of objects may have different unity criteria.
	    Differently from aggregates, (most) objects change some of their parts while keeping their identity,
	    they can have therefore temporary parts."},

    'NPOB {:name "Non-physical Object"}, ; of Non-physical Endurant

    'ACH  {:name "Achievement"          ; of Event
	   :description
	   "An atomic Event (EV) Examples: reaching the summit of K2, a departure, a death.
	    anti-cumulative and atomic (A75)"},

    'ACC  {:name "Accomplishment"
	   :description "A non-atomic Event (EV)
	    N.B. It seems that the important aspect of a manufacturing process is not that it is a process,
	    but that it is an Accomplishment (focus on it being eventive, not stative).
	    Examples: a conference, an ascent, a performance.
	    anti-cumulative and anti-atomic (A76)"},

    'ST   {:name "State"               ; of Stative
	   :description
	   "A Stative (STV) that is homeomeric, all its temporal parts are described by the very expression
	   used for the whole occurrence. Example: Sitting.
	   cumulative and homeomerous (A77)"},
    'PRO  {:name "Process"
	   :description
	   "A Stative (STV) that is NOT homeomeric. Example: Running.
	    N.B. It seems that the important aspect of a manufacturing process is not that it is a process,
	    but that it is an Accomplishment (focus on it being eventive, not stative).
	    cumulative and anti-homeomerous (A78)."},

    'TL   {:name "Temporal Location"},   ; of Temporal Quality
    'SL   {:name "Spatial Location"},    ; of Physical Quality

    'TR   {:name "Temporal Region"},     ; of Region
    'PR   {:name "Physical Region"},
    'AR   {:name "Abstract Region"},

    'APO  {:name "Agentive Physical Object"       ; of Physical Object
	   :description
	   "Within Physical Objects, a special place have those those to which we ascribe intentions,
	    beliefs, and desires. These are called Agentive."},
    'NAPO {:name "Non-agentive Physical Object"},

    'MOB  {:name "Mental Object"                   ; of Non-Physical Object
	   :description
	   "A Non-physical Object (NPO, NPED) that is not generically dependent on a community of agents.
	    e.g. a private experience."},
    'SOB  {:name "Social Object"
	   :description
	   "A Non-physical Object (NPO) that is generically dependent on a community of agents."},

    'T    {:name "Time Interval"},                 ; of Temporal Region
    'S    {:name "Space Region"},                  ; of Physical Region

    'ASO  {:name "Agentive Social Object"          ; of Social Object
	   :description
	   "A Social Object (SOB) that is generically dependent on a community of agents.
	    Social agents are NOT constituted by agentive physical objects (although they depend on them),
	    while they can constitute societies, like the CNR, Mercedes-Benz, etc.
	    N.B. Social Agent is a leaf of this subtree. Is it generically dependent on a community of agents?"},

    'NASO {:name "Non-agentive Social Object"
	   :description "A Social Object (SOB) that is not generically dependent on a community of agents."},

    'SAG  {:name "Social Agent"                    ; of Agentive Social Object
	   :description
	   "An Agentive Social Object (ASO), for example, a person viewed as a legal entity, a contractant."},

    'SC   {:name "Society"
	   :description
	   "Can be constituted from Agentive Social Objects (SOB). Examples: CNR, Mercedes-Benz, etc."}
    }})

(def relations (atom []))

(defmacro defrelation [name args connective & body]
  `(swap! relations conj '~name))

;;; For later: (-> relations deref distinct sort)

(defmacro forall [args & body]
  :nyi)

;;; Basic functions and relations

;;; New non-rigid universals introduced in specialized
;;; theories or in new versions of DOLCE need to be added in
;;; this definition as new disjunction clauses of form (= ?f ).

;;; (ND1): universals
(defrelation UNIVERSAL (?f) :=
  (or (X ?f))) ; So far, all the universal are the Rigid Universals we know about.

;;; New rigid universals introduced in new versions of DOLCE
;;; (or by the user) need to be added in this definition.
;;; (ND2) rigid universals
(defrelation X (?f) :=
  (or (= ?f ALL)   ; DOLCE is an ontology of particulars, in the sense that its domain of discourse is restricted to them.
		   ; Maybe then it reflects a nominalist viewpoint (universals don't exist but as terms and predicates).
      (= ?f AB)    ; Abstract
      (= ?f R)     ; Region
      (= ?f TR)    ; Temporal region
      (= ?f T)     ; Time interval
      (= ?f PR)    ; Physical region
      (= ?f S)     ; Space Region
      (= ?f AR)    ; Abstract Region
      (= ?f Q)     ; Quality
      (= ?f TQ)    ; Temporal Quality
      (= ?f TL)    ; Temporal Location
      (= ?f PQ)    ; Physical Quality
      (= ?f SL)    ; Spatial Location
      (= ?f AQ)    ; Abstract Quality
      (= ?f ED)    ; Endurant
      (= ?f M)     ; Amount of Matter
      (= ?f PED)   ; Physical Endurant
      (= ?f F)     ; Feature
      (= ?f POB)   ; Physical Object
      (= ?f APO)   ; Agentive Physical Object
      (= ?f NAPO)  ; Non-agentive Physical Object
      (= ?f NPED)  ; Non-physical Endurant
      (= ?f NPOB)  ; Non-physical Object
      (= ?f MOB)   ; Mental Object
      (= ?f SOB)   ; Social Object
      (= ?f ASO)   ; Agentive Social Object
      (= ?f SAG)   ; Social Agent
      (= ?f SC)    ; Society
      (= ?f NASO)  ; Non-agentive Social Object
      (= ?f AS)    ; Abitrary Sum
      (= ?f PD)    ; Perdurant
      (= ?f EV)    ; Event
      (= ?f ACH)   ; Achievement
      (= ?f ACC)   ; Accomplishment
      (= ?f STV)   ; Stative
      (= ?f ST)    ; State
      (= ?f PRO))) ; Process

;;; There are no particulars in this version of DOLCE. Any particular has to be added in this definition.
;;; The def will have form : (or (= ?x ) (= ?x )).
;;; [I am a bit confused by this comment, since DOLCE is an ontology of particulars! ED, PD, Q, AB, are all particulars.]

;;; (ND3) particulars
(defrelation PARTICULAR (?x) := )

;;; There are no named worlds in this version of DOLCE.
;;; Any world has to be added in this definition. The def. will have form :(or (= ?w) (= ?w)).

;;; (ND4) worlds
(defrelation WORLD (?w) :=
  (or (= ?w EveryDay)                   ; POD added. (I probably wouldn't do any of this.)
      (= ?w Manufacturing)              ; POD added.
      (= ?w ApparelManufacturing)))     ; POD added.

;;; (ND5) accessibility relation on worlds
(defrelation WLDR (?w ?v) :=
  (and (WORLD ?w) (WORLD ?v)))

;;; ============== DOLCE's 7 Primitive Relations =====================================

;;; POD I haven't found it written in the KIF spec, but I believe :=> means necessary, whereas
;;; := is a definition (necessary and sufficient).
;;; NA is used for "New Axiom"

;;; (ND6) Parthood
(defrelation P (?w ?x ?y) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y)))

;;; (ND7) Temporal Parthood
(defrelation P (?w ?x ?y ?t) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y) (PARTICULAR ?t)))

;;; (ND8) Constitution
(defrelation K (?w ?x ?y ?t) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y) (PARTICULAR ?t)))

;;; (ND9) Participation
(defrelation PC (?w ?x ?y ?t) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y) (PARTICULAR ?t)))

;;; (ND10) Quality
(defrelation qt (?w ?x ?y) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y)))

;;; (ND11) Quale
(defrelation ql (?w ?x ?y) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y)))

;;; (ND12) Quale (temporal)
(defrelation ql (?w ?x ?y ?t) :=>
  (and (WORLD ?w) (PARTICULAR ?x) (PARTICULAR ?y) (PARTICULAR ?t)))

;;;*****************************************************

;;; (NA1) NEW AXIOM: total domain
(forall (?x)
	(or (PARTICULAR ?x) (UNIVERSAL ?x) (WORLD ?x)))

;;; (NA2) partition of the domain
(forall (?x)
	(and (<=> (PARTICULAR ?x)
		  (and (not (UNIVERSAL ?x)) (not (WORLD ?x))))
	     (<=> (UNIVERSAL ?x)
		  (and (not (PARTICULAR ?x)) (not (WORLD ?x))))
	     (<=> (WORLD ?x)
		  (and (not (PARTICULAR ?x)) (not (UNIVERSAL ?x))))))

;;; Formal Characterization
;;; PRINCIPLES USED IN THE TRANSLATION IN KIF:
;;; Modal operators of possibility and necessity are translated in the standard
;;; way, see for instance p516 of Handbook of Logic in AI and Logic Prog. Vol.4;
;;; The indices of relations are included prefixing a dot (we preserve the capital or
;;; lower case distinction)
;;; These are the only predicates (with their arity) that do not have possible worlds
;;; as arguments:
;;; X_1,PARTICULAR_1,UNIVERSAL_1, =_2

;;; No need for Barcan formulas; the domain of particulars turns out to be unique in the translation .

;;; WLDR is an equivalence relation (from correspondence theory, this implies
;;; that WLDR is a relation for S5). The axioms (NA10)-(NA12) are not necessary
;;; because of our definition of WLDR.
;;; (NA10)
;;; (forall (?w0) (=> (WORLD ?w0) (WLDR ?w0 ?w0)))
;;; (NA11)
;;; (forall (?w0 ?w1)
;;; (=> (and (WLDR ?w0 ?w1) (WORLD ?w0) (WORLD ?w1))
;;; (WLDR ?w1 ?w0)))
;;; (NA12)
;;; (forall (?w0 ?w1 ?w2)

;;; (=> (and (WLDR ?w0 ?w1)
;;; (WLDR ?w1 ?w2)
;;; (WORLD ?w0)
;;; (WORLD ?w1)
;;; (WORLD ?w2))
;;; (WLDR ?w0 ?w2)))

;;; ***THE UNIVERSALS ARE NECESSARILY NON-EMPTY***
;;; (NA14) --axiom
(forall (?w ?f) (=> (and (UNIVERSAL ?f) (WORLD ?w))
		    (NEP ?w ?f)))

;;; (NA15) --axiom
;;; Rigid means true in all worlds. Notice (forall (?w ...))
;;; If it is a universal AND true in all worlds, it is either one we know about (X ?f) (See defrelation X...)
;;; or it meets the conditions of RG in all worlds.
(forall (?w ?f) (=> (and (UNIVERSAL ?f) (WORLD ?w))
		    (or (not (X ?f))  ; I'm having trouble with this part! (X ?f) => (RG ?f)
			(RG ?w ?f))))

;;; ================================ Taxonomy ======================================
;;; (NA16) Instances of PT --axiom
(forall (?w0) (=> (WORLD ?w0)                    ; See also Figure 2, (D18), pg 14.
		  (and (PT ?w0 ALL ED PD Q AB)   ; Toplevel!
		       (PT ?w0 ED PED NPED AS)   ; (defrelation PT (?w0 ?f @g) ...
		       (PT ?w0 PED M F POB)
		       (PT ?w0 POB APO NAPO)
		       (PT ?w0 NPOB MOB SOB)
		       (PT ?w0 SOB ASO NASO)
		       (PT ?w0 ASO SAG SC)
(PT ?w0 PD EV STV)
		       (PT ?w0 EV ACH ACC)
		       (PT ?w0 STV ST PRO)
		       (PT ?w0 Q TQ PQ AQ)
		       (PT ?w0 R TR PR AR))))

;;; (NA17) Instances of SB --axiom
(forall (?w0)
	(=> (WORLD ?w0)
	    (and (SB ?w0 ALL ED) (SB ?w0 ALL PD) (SB ?w0 ALL Q) (SB ?w0 ALL AB)
		 (SB ?w0 ED PED) (SB ?w0 ED NPED) (SB ?w0 ED AS)
		 (SB ?w0 PED M) (SB ?w0 PED F) (SB ?w0 PED POB)
		 (SB ?w0 POB APO) (SB ?w0 POB NAPO)
		 (SB ?w0 NPED NPOB)
		 (SB ?w0 NPOB MOB) (SB ?w0 NPOB SOB)
		 (SB ?w0 SOB ASO) (SB ?w0 SOB NASO)
		 (SB ?w0 ASO SAG) (SB ?w0 ASO SC)
		 (SB ?w0 PD EV) (SB ?w0 PD STV)
		 (SB ?w0 EV ACH) (SB ?w0 EV ACC)
		 (SB ?w0 STV ST) (SB ?w0 STV PRO)
		 (SB ?w0 Q TQ) (SB ?w0 Q PQ) (SB ?w0 Q AQ)
		 (SB ?w0 TQ TL)
		 (SB ?w0 PQ SL)
		 (SB ?w0 AB FACT) (SB ?w0 AB SET) (SB ?w0 AB R)
		 (SB ?w0 R TR) (SB ?w0 R PR) (SB ?w0 R AR)
		 (SB ?w0 TR T)
		 (SB ?w0 PR S))))

;;; (NA18) Existence of sum
(forall (?w0 ?x ?y)
	(=> (and (PARTICULAR ?x) (PARTICULAR ?y) (WORLD ?w0))
	    (exists (?z)
		    (and (PARTICULAR ?z) (+ ?w0 ?x ?y ?z)))))

;;; (NA19) Existence of sigma
(forall (?w0 ?f) ; POD This is DOLCE's notion of a function???
	(=> (and (UNIVERSAL ?f) (WORLD ?w0))
	    (exists (?z)
		    (and (PARTICULAR ?z) (sigma ?w0 ?f ?z)))))

;;; (NA20) Existence of sum.t
(forall (?w0 ?x ?y)
	(=> (and (PARTICULAR ?x) (PARTICULAR ?y) (WORLD ?w0))
	    (exists (?z)
		    (and (PARTICULAR ?z) (%.t ?w0 ?x ?y ?z)))))

;;; (NA21) Existence of sigma.t
(forall (?w0 ?f)
	(=> (and (UNIVERSAL ?f) (WORLD ?w0))
	    (exists (?z)
		    (and (PARTICULAR ?z) (sigma.t ?w0 ?f ?z)))))

;;; this could be added in the def. of UNIVERSAL
;;; (forall (@f)
;;; (<=> (UNIVERSAL @f)
;;; (exists (?g @h) (and (UNIVERSAL ?g)
;;; (or (UNIVERSAL @h) (= @h (listof)))
;;; (= @f (listof ?g @h))))))

;;; this could be added in the def. of PARTICULAR
;;;(forall (@x)
;;; (<=> (PARTICULAR @x)
;;; (exists (?y @z) (and (PARTICULAR ?y)
;;; (or (PARTICULAR @z) (= @z (listof)))
;;; (= @x (listof ?y @z))))))

;;;********************************************************
;;; (D1) RG: Rigid Universal
(defrelation RG (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (forall (?w ?x)
	       (=> (and (WLDR ?w0 ?w) (WORLD ?w) (PARTICULAR ?x))
		   (=> (?f ?w ?x)
		       (forall (?u)
			       (=> (and (WLDR ?w ?u) (WORLD ?u))
				   (?f ?u ?x))))))))

;;; (D2) NEP: Non-Empty Universal
(defrelation NEP (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (forall (?w)
	       (=> (and (WLDR ?w0 ?w) (WORLD ?w))
		   (exists (?y)
			   (and (PARTICULAR ?y) (?f ?w ?y)))))))

;;; (D3) DJ: Disjoint Universals
(defrelation DJ (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (forall (?w ?x)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(PARTICULAR ?x))
		   (not (and (?f ?w ?x) (?g ?w ?x)))))))

;;; (D4) SB: Subsumption
(defrelation SB (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (forall (?w ?x)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(PARTICULAR ?x))
		   (or (not (?g ?w ?x)) (?f ?w ?x))))))

;;; (D5) EQ: Equal Universals
;;; Two universals are equal if they subsume each other.
(defrelation EQ (?w0 ?f ?g) :=
(and (UNIVERSAL ?f) (UNIVERSAL ?g) (WORLD ?w0) (SB ?w0 ?f ?g) (SB ?w0 ?g ?f)))

;;; (D6) PSB: Properly Subsuming
(defrelation PSB (?w0 ?f ?g) :=
(and (UNIVERSAL ?f) (UNIVERSAL ?g) (WORLD ?w0) (SB ?w0 ?f ?g)
     (not (SB ?w0 ?f ?g))))

;;; (D7) L: Leaf Universal
;;; ?f is a Leaf Univeral (not necessarily known, compare this to L.X).
(defrelation L (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (forall (?w ?g)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(UNIVERSAL ?g))
		   (or (not (SB ?w0 ?f ?g)) (EQ ?w0 ?f ?g))))))

;;; (D8) SBL: Leaf Subsumed by
(defrelation SBL (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f) (UNIVERSAL ?g) (WORLD ?w0) (SB ?w0 ?f ?g) (L ?w0 ?g)))

;;; (D9) PSBL: Leaf Properly Subsumed by
(defrelation PSBL (?w0 ?f ?g) :=
(and (UNIVERSAL ?f) (UNIVERSAL ?g) (WORLD ?w0) (PSB ?w0 ?f ?g) (L ?w0 ?g)))

;;; (D10) L__: Leaf in the set of known Rigid Universals
;;; ?f is a known universal
(defrelation L.X (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (X ?f)  ; ?f is a known Rigid Universal
       (forall (?w ?g) ; any known RG ?g subsumed by ?f is equal to ?f
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(UNIVERSAL ?g)) ; in other words, ?f is a leaf of the known RG.
		   (=> (and (SB ?w ?f ?g) (X ?g))
		       (EQ ?w ?f ?g))))))

;;; (D11) SBL.X
;;; ?f subsumes ?g and ?g is a leaf in the known Rigid Univerals.
(defrelation SBL.X (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f) (UNIVERSAL ?g) (WORLD ?w0) (SB ?w0 ?f ?g) (L.X ?w0 ?g)))

;;; (D12) PSB.X_
(defrelation PSBL.X (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f) (UNIVERSAL ?g) (WORLD ?w0) (PSB ?w0 ?f ?g) (L.X ?w0 ?g)))

;;; Definition (D13) is left for expressivity. In practice it becomes superfluous
;;; since the user needs to give a list of the n-tuple satisfying relation PT in
;;; axiom (NA17)
;;; (D13) PT: Partition
(defrelation PT (?w0 ?f @g) := ; POD only use of sequence variables in the file!
  (and (UNIVERSAL ?f)
       (UNIVERSAL @g)
       (WORLD ?w0)
       (not (item ?f @g)) ; POD item defined only in this relation.
       (forall (?h ?k)
	       (and (=> (and (UNIVERSAL ?h)
			     (UNIVERSAL ?k)
			     (item ?h @g)
			     (item ?k @g)
			     (slash-= ?h ?k)) ; POD was /=
			(DJ ?w0 ?h ?k))
		    (forall (?w ?x)
			    (=> (and (WLDR ?w0 ?w)
				     (WORLD ?w)
				     (PARTICULAR ?x))
				(<=> (?f ?w ?x)
				     (exists (?h)
					     (and (UNIVERSAL ?h)
						  (item ?h @g)
						  (?h ?w ?x))))))))))

;;; Mereological Definitions
;;; (D14) PP: Proper Part
;;; ?x is a PP of ?y if ?x is a part of ?y and ?y is not a part of ?x.
(defrelation PP (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (P ?w0 ?x ?y)
       (not (P ?w0 ?y ?x))))

;;; (D15) O: Overlap
(defrelation O (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (exists (?z) (and (PARTICULAR ?z)
			 (P ?w0 ?z ?x)
			 (P ?w0 ?z ?y)))))

;;; (D16) At: Atom
(defrelation At (?w0 ?x) :=
  (and (PARTICULAR ?x)
       (WORLD ?w0)
       (not (exists (?y) (and (PARTICULAR ?y)
			      (PP ?w0 ?y ?x))))))

;;; (D17) AtP: Atomic Part
(defrelation AtP (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (P ?w0 ?x ?y)
       (At ?w0 ?x)))

;;; (D18) + Binary Sum
(defrelation + (?w0 ?x ?y ?z) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?z)
       (WORLD ?w0)
       (forall (?u)
	       (=> (PARTICULAR ?u)
		   (<=> (O ?w0 ?u ?z)
			(or (O ?w0 ?u ?x) (O ?w0 ?u ?y)))))
       (forall (?z1)
	       (=> (and (PARTICULAR ?z1)
			(forall (?u)
				(=> (PARTICULAR ?u)
				    (<=> (O ?w0 ?u ?z1)
					 (or (O ?w0 ?u ?x) (O ?w0 ?u ?y))))))
		   (= ?z1 ?z)))))

;;; (D19) (general) Sum
;;; Note: the rendition in KIF is weaker than the corresponding definition in modal FOL.
;;; Here ?f has to be one of the universal introduced explicitly.
;;; [A possible way out: use string-variables (@f) to code Boolean combinations of universals.]
;;; POD My hypothesis is that sigma is DOLCE's notion of function of any number of values.
;;;     whereas + is a function of two values. Needs investigation, but is the (= ?z1 ?z) serving
;;;     as 'functional relationship' ???
(defrelation sigma (?w0 ?f ?z) :=
  (and (PARTICULAR ?z)
       (UNIVERSAL ?f)
       (WORLD ?w0)
       (forall (?y)
	       (=> (PARTICULAR ?y)
		   (<=> (O ?w0 ?y ?z)
			(exists (?v)
				(and (PARTICULAR ?v)
				     (?f ?w0 ?v)
				     (O ?w0 ?y ?v))))))
       (forall (?z1)
	       (=> (PARTICULAR ?z1)
		   (exists (?y)
			   (and (PARTICULAR ?y)
				(=> (<=> (O ?w0 ?y ?z1)
					 (exists (?v)
						 (and (PARTICULAR ?v)
						      (?f ?w0 ?v)
						      (O ?w0 ?y ?v)))))
				(= ?z1 ?z)))))))

;;; (D20) PP: Temporary Proper Part
(defrelation PP (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (P ?w0 ?x ?y ?t)
       (not (P ?w0 ?y ?x ?t))))

;;; (D21) O: Temporary Overlap
(defrelation O (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?z) (and (PARTICULAR ?z)
			 (P ?w0 ?z ?x ?t)
			 (P ?w0 ?z ?y ?t)))))

;;; (D22) At: Temporary Atom
(defrelation At (?w0 ?x ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (not (exists (?y)
		    (and (PARTICULAR ?y) (PP ?w0 ?y ?x ?t))))))

;;; (D23) AtP: Temporary Atomic Part
(defrelation AtP (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (P ?w0 ?x ?y ?t)
       (At ?w0 ?x ?t)))

;;; (D24) %.t: Coincidence
(defrelation %.t (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (P ?w0 ?x ?y ?t)
       (P ?w0 ?y ?x ?t)))

;;; (D25) CP: Constant Part
(defrelation CP (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (exists (?t)
	       (and (PARTICULAR ?t) (PRE ?w0 ?y ?t)))
       (forall (?t)
	       (=> (and (PARTICULAR ?t) (PRE ?w0 ?y ?t))
		   (P ?w0 ?x ?y ?t)))))

;(D26) Temporal sum?
(defrelation %.t (?w0 ?x ?y ?z) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?z)
       (WORLD ?w0)
       (forall (?u ?t)
	       (=> (and (PARTICULAR ?u) (PARTICULAR ?t))
		   (<=> (O ?w0 ?u ?z ?t)
			(or (O ?w0 ?u ?x ?t) (O ?w0 ?u ?y ?t)))))
       (forall (?z1 ?t)
	       (=> (and (PARTICULAR ?z1)
			(PARTICULAR ?t)
			(forall (?u)
				(=> (PARTICULAR ?u)
				    (<=> (O ?w0 ?u ?z1 ?t)
					 (or (O ?w0 ?u ?x ?t) (O ?w0 ?u ?y ?t))))))
		   (= ?z1 ?z)))))

;;; (D27)
;;; NOTE: this rendition includes only the listed universal, for instance,
;;; no Boolean combination of universals is included [see also comment on (D19)]
(defrelation sigma.t (?w0 ?f ?z) :=
  (and (PARTICULAR ?z)
       (UNIVERSAL ?f)
       (WORLD ?w0)
       (forall (?y ?t)
	       (=> (and (PARTICULAR ?y) (PARTICULAR ?t))
		   (<=> (O ?w0 ?y ?z ?t)
			(exists (?v)
				(and (PARTICULAR ?v)
				     (?f ?w0 ?v)
				     (O ?w0 ?y ?v ?t))))))
       (forall (?z1 ?t)
	       (=> (and (PARTICULAR ?z1) (PARTICULAR ?t))
		   (exists (?y)
			   (and (PARTICULAR ?y)
				(=> (<=> (O ?w0 ?y ?z1 ?t)
					 (exists (?v)
						 (and (PARTICULAR ?v)
						      (?f ?w0 ?v)
						      (O ?w0 ?y ?v ?t))))
				    (= ?z1 ?z))))))))

;;; Quality
;;; (D28) dqt: Direct Quality
(defrelation dqt (?w0 ?x ?y) :=
  (and (WORLD ?w0)
       (PARTICULAR ?x)
       (PARTICULAR ?y)
       (qt ?w0 ?x ?y)
       (not (exists (?z)
		    (and (PARTICULAR ?z)
			 (qt ?w0 ?x ?z) ; Nothing
			 (qt ?w0 ?z ?y))))))

;;; (D29) qt: Quality of type
;;; The Quality, Perdurant or Endurant ?y has a TL or SL Quality ?x. -- Yes, argument order seems swapped.
;;; Note: I think the only valid binding of ?f is a member of  {TL, SL}.
;;;       This is because (SBL.X  Q ...), which uses L.X, requires ?f to be a known rigid universal leaf of Q.
;;;       The last two forms serve to bind ?f to one of these.
(defrelation qtf (?w0 ?f ?x ?y) :=
  (and (UNIVERSAL ?f)
       (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (qt ?w0 ?x ?y)       ; ?x is a Quality, ?y is Quality, Perdurant or Endurant. See (A38)-(A41).
       (?f ?w0 ?x)          ; Quality ?x possess this 'property' ?f. (e.g. like TL in ql.T.PD below)
       (SBL.X ?w0 Q ?f)))   ; ?f is a known rigid universal under Q. (I think that means it is TL or SL).

;;; ---- About Spatial and Temporal Qualia ---------------------------------------------------
;;; Temporal and Spatial Quale
;;; (D30) ql_T,PD
;;; Perdurant ?x has quale relationship to a Temporal Location ?t
;;; This seems to bind the Perdurant to a quale through an unspecified Quality ?z.
(defrelation ql.T.PD (?w0 ?t ?x) :=
  (and (PARTICULAR ?t)
       (PARTICULAR ?x)
       (WORLD ?w0)
       (PD ?w0 ?x)
       (exists (?z) (and (PARTICULAR ?z)
			 (qtf ?w0 TL ?z ?x) ; Perdurant ?x has Quality TL (subtype of TQ) ?z
			 (ql ?w0 ?t ?z))))) ; By (A52), ?t must be a Temporal Region (subtype of Abstract), ?z must be a TQ.

;;; (D31) ql_T,ED
(defrelation ql.T.ED (?w0 ?t ?x) :=
  (and (PARTICULAR ?t)
       (PARTICULAR ?x)
       (WORLD ?w0)
       (ED ?w0 ?x)
       (forall (?u)
	       (=> (PARTICULAR ?u)
		   (<=> (O ?w0 ?u ?t)
			(exists (?v ?y)
				(and (PARTICULAR ?v)
				     (PARTICULAR ?y)
				     (PC ?w0 ?x ?y ?v)
				     (O ?w0 ?u ?v))))))
       (forall (?t1)
	       (=> (PARTICULAR ?t1)
		   (exists (?u)
			   (and (PARTICULAR ?u)
				(=> (<=> (O ?w0 ?u ?t1)
					 (exists (?v ?y)
						 (and (PARTICULAR ?v)
						      (PARTICULAR ?y)
						      (PC ?w0 ?x ?y ?v)
						      (O ?w0 ?u ?v))))
				    (= ?t1 ?t))))))))

;;; (D32) ql_T,TQ
(defrelation ql.T.TQ (?w0 ?t ?x) :=
  (and (PARTICULAR ?t)
       (PARTICULAR ?x)
       (WORLD ?w0)
       (TQ ?w0 ?x)
       (exists (?z) (and (PARTICULAR ?z)
			 (qt ?w0 ?x ?z)
			 (ql.T.PD ?w0 ?t ?z)))))

;;; (D33) ql_T,PQ_or_AQ
(defrelation ql.T.PQAQ (?w0 ?t ?x) :=
  (and (PARTICULAR ?t)
       (PARTICULAR ?x)
       (WORLD ?w0)
       (or (PQ ?w0 ?x) (AQ ?w0 ?x))
       (exists (?z) (and (PARTICULAR ?z)
			 (qt ?w0 ?x ?z)
			 (ql.T.ED ?w0 ?t ?z)))))

;;; (D34) ql_T,Q
(defrelation ql.T.Q (?w0 ?t ?x) :=
  (and (PARTICULAR ?t)
       (PARTICULAR ?x)
       (WORLD ?w0)
       (or (ql.T.TQ ?w0 ?t ?x)
	   (ql.T.PQAQ ?w0 ?t ?x))))

;;; (D35) ql_T: Temporal Quale - covered by ql.T.ED, ql.T.PD, ql.T.Q.
(defrelation ql.T (?w0 ?t ?x) :=
  (and (PARTICULAR ?t)
       (PARTICULAR ?x)
       (WORLD ?w0)
       (or (ql.T.ED ?w0 ?t ?x)     ; ?x is endurant at  ?t
	   (ql.T.PD ?w0 ?t ?x)     ; ?x is perdurant at ?t
	   (ql.T.Q ?w0 ?t ?x))))   ; ?x is a quality at ?t

;;; (D36) ql_S,PED
(defrelation ql.S.PED (?w0 ?s ?x ?t) :=
  (and (PARTICULAR ?s)
       (PARTICULAR ?x)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (PED ?w0 ?x)
       (exists (?z) (and (PARTICULAR ?z)
			 (qtf ?w0 SL ?z ?x)
			 (ql ?w0 ?s ?z ?t)))))

;;; (D37) ql_S,PQ
(defrelation ql.S.PQ (?s ?x ?t) :=
  (and (PARTICULAR ?s)
       (PARTICULAR ?x)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (PQ ?w0 ?x)
       (exists (?z) (and (PARTICULAR ?z)
			 (qt ?w0 ?x ?z)
			 (ql.S.PED ?w0 ?s ?z ?t)))))

;;; (D38) ql_S,PD
(defrelation ql.S.PD (?w0 ?s ?x ?t) :=
  (and (PARTICULAR ?s)
       (PARTICULAR ?x)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (PD ?w0 ?x)
       (exists (?z) (and (PARTICULAR ?z)
			 (mppc ?w0 ?z ?x)
			 (ql.S.PED ?w0 ?s ?z ?t)))))

;;; (D39) ql_S: Spatial Quale - covered by ql.S.PED, ql.S.PQ, ql.S.PD
(defrelation ql.S (?w0 ?s ?x ?t) :=
  (and (PARTICULAR ?s)
       (PARTICULAR ?x)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (or (ql.S.PED ?w0 ?s ?x ?t)
	   (ql.S.PQ ?w0 ?s ?x ?t)
	   (ql.S.PD ?w0 ?s ?x ?t))))

;;;Being present
;;; (D40) PRE: Being Present at
(defrelation PRE (?w0 ?x ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?u) (and (PARTICULAR ?u)
			 (ql.T ?w0 ?u ?x)      ;
			 (P ?w0 ?t ?u)))))

;;; (D41) PRE: Being Present in at
(defrelation PRE (?w0 ?x ?s ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?s)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (PRE ?w0 ?x ?t)
       (exists (?u) (and (PARTICULAR ?u)
			 (ql.S ?w0 ?u ?x ?t)
			 (P ?w0 ?s ?u)))))

;;; ---- About Spatial and Temporal inclusion and coincidence ---------------------------------------------------
;;; Inclusion and Coincidence
;;; (D42) Temporal Inclusion
;;; To be incl.T is to have a qualia with a corresponding parthood relationship.
(defrelation incl.T (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (exists (?t ?u) (and (PARTICULAR ?t)
			    (PARTICULAR ?u)
			    (ql.T ?w0 ?t ?x)  ; ?x is a Quale at ?t
			    (ql.T ?w0 ?u ?y)  ; ?y is a Quale at ?u
			    (P ?w0 ?t ?u))))) ; ?t is a part of ?u.

;;; (D43) Proper Temporal Inclusion
(defrelation sincl.T (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (exists (?t ?u) (and (PARTICULAR ?t)
			    (PARTICULAR ?u)
			    (ql.T ?w0 ?t ?x)
			    (ql.T ?w0 ?u ?y)
			    (PP ?w0 ?t ?u)))))

;;; (D44) Temporary Spatial Inclusion
(defrelation incl.S.t (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?s ?r) (and (PARTICULAR ?s)
			    (PARTICULAR ?r)
			    (ql.S ?w0 ?s ?x ?t)
			    (ql.S ?w0 ?r ?y ?t)
			    (P ?w0 ?s ?r)))))

;;; (D45) Temp. Proper Spatial Inclusion
(defrelation sincl.S.t (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?s ?r) (and (PARTICULAR ?s)
			    (PARTICULAR ?r)
			    (ql.S ?w0 ?s ?x ?t)
			    (ql.S ?w0 ?r ?y ?t)
			    (PP ?w0 ?s ?r)))))

;;; (D46) Spatio-temporal Inclusion
(defrelation incl.S.T (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (exists (?t) (and (PARTICULAR ?t) (PRE ?w0 ?x ?t)))
       (forall (?t) (=> (and (PARTICULAR ?t) (PRE ?w0 ?x ?t))
			(incl.S.t ?w0 ?x ?y ?t)))))

;;; (D47) Spatio-temp. Inclusion during
(defrelation incl.S.T.t (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (PRE ?w0 ?x ?t)
       (forall (?u) (=> (and (PARTICULAR ?u) (AtP ?w0 ?u ?t))
			(incl.S.t ?w0 ?x ?y ?u)))))

;;; (D48) Temporal Coincidence
(defrelation %.T (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (incl.T ?w0 ?x ?y)
       (incl.T ?w0 ?y ?x)))

;;; (D49) Temporary Spatial Coincidence
(defrelation %.S.t (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (incl.S.t ?w0 ?x ?y ?t)
       (incl.S.t ?w0 ?y ?x ?t)))

;;; (D50) Spatio-temporal Coincidence
(defrelation %.S.T (?w0 ?x ?y) :=
  (and (WORLD ?w0)
       (PARTICULAR ?x)
       (PARTICULAR ?y)
       (incl.S.T ?w0 ?x ?y)
       (incl.S.T ?w0 ?y ?x)))

;;; (D51) Spatio-temp. Coincidence during
(defrelation %.S.T.t (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (PRE ?w0 ?x ?t)
       (forall (?u) (=> (and (PARTICULAR ?u) (AtP ?w0 ?u ?t))
			(%.S.t ?w0 ?x ?y ?u)))))

;;; ---- About Objects and Qualia ---------------------------------------------------
;;; (D52) O_T: Temporal Overlap
(defrelation O.T (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (exists (?t ?u) (and (PARTICULAR ?t)
			    (PARTICULAR ?u)
			    (ql.T ?w0 ?t ?x)
			    (ql.T ?w0 ?u ?y)
			    (O ?w0 ?t ?u)))))

;;; (D53) O_S,t: Temporary Spatial Overlap
(defrelation O.S.t (?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?s ?r) (and (PARTICULAR ?s)
			    (PARTICULAR ?r)
			    (ql.S ?w0 ?s ?x ?t)
			    (ql.S ?w0 ?r ?y ?t)
			    (O ?w0 ?s ?r)))))

;;; ---- About Perdurants ---------------------------------------------------
;;; (D54) P_T: Temporal Part
;;; This just seems to bridge the gap between incl.T and P.
(defrelation P.T (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (PD ?w0 ?x)
       (P ?w0 ?x ?y) ; ?x, a perdurant, is a part of ?y.
       (forall (?z) (=> (and (PARTICULAR ?z)
			     (P ?w0 ?z ?y)       ; for any ?z that is a part of ?y
			     (incl.T ?w0 ?z ?x)) ; where ?z is a (temporal included) in ?x
			(P ?w0 ?z ?x)))))        ; ?z is also a part of ?x

;;; (D55) P_S: Spatial Part
(defrelation P.S (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (PD ?w0 ?x)
       (P ?w0 ?x ?y)
       (%.T ?w0 ?x ?y)))

;;; (D56) NEP_S: Strongly Non-Empty
(defrelation NEP.S (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (SB ?w0 PD ?f)
       (forall (?w) (=> (and (WLDR ?w0 ?w) (WORLD ?w))
			(exists (?x ?y)
				(and (PARTICULAR ?x)
				     (PARTICULAR ?y)
				     (?f ?w ?x)
				     (?f ?w ?y)
				     (not (P ?w ?x ?y))
				     (not (P ?w ?y ?x))))))))

;;; (D57) CM: Cumulative
(defrelation CM (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (SB ?w0 PD ?f)
       (forall (?w ?x ?y ?z)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(PARTICULAR ?x)
			(PARTICULAR ?y)
			(PARTICULAR ?z)
			(+ ?w?x ?y ?z)
			(?f ?w ?x)
			(?f ?w ?y))
		   (?f ?w ?z)))))

;;; (D58) CM: Anti-Cumulative
(defrelation CM% (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (SB ?w0 PD ?f)
       (forall (?w ?x ?y ?z)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(PARTICULAR ?x)
			(PARTICULAR ?y)
			(PARTICULAR ?z)
			(+ ?w?x ?y ?z)
			(?f ?w ?x)
			(?f ?w ?y)
			(not (P ?w ?x ?y))
			(not (P ?w ?y ?x)))
		   (not (?f ?w ?z))))))

;;; (D59) HOM: Homeomerous (Homeomeric)
;;; A Universal property is homeomeric if it is a Perdurant that, when present at t,
;;; is present in all the parts of t.
(defrelation HOM (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (SB ?w0 PD ?f)
       (forall (?w ?x ?y) (=> (and (WLDR ?w0 ?w)
				   (WORLD ?w)
				   (PARTICULAR ?x)
				   (PARTICULAR ?y)
				   (?f ?w ?x)
				   (P.T ?w ?y ?x)) ; ?y is a temporal part of ?x.
			      (?f ?w ?y)))))

;;; (D60) HOM: Anti-Homeomerous
(defrelation HOM% (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (SB ?w0 PD ?f)
       (forall (?w ?x)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(PARTICULAR ?x)
			(?f ?w ?x))
		   (exists (?y)
			   (and (PARTICULAR ?y)
				(P.T ?w ?y ?x)
				(not (?f ?w ?y))))))))

;;; (D61) AT: Atomic
(defrelation AT (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (SB ?w0 PD ?f)
       (forall (?w ?x) (=> (and (WLDR ?w0 ?w)
				(WORLD ?w)
				(PARTICULAR ?x)
				(?f ?w ?x))
			   (At ?w ?x)))))

;;; (D62) AT: Anti-Atomic
(defrelation AT% (?w0 ?f) :=
  (and (UNIVERSAL ?f)
       (WORLD ?w0)
       (SB ?w0 PD ?f)
       (forall (?w ?x) (=> (and (WLDR ?w0 ?w)
				(WORLD ?w)
				(PARTICULAR ?x)
				(?f ?w ?x))
			   (not (At ?w ?x))))))

;;; ---- About Participation  ---------------------------------------------------
;;; (D63) PC_C: Constant Participation
(defrelation PC.C (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (exists (?t) (and (PARTICULAR ?t) (PRE ?w0 ?y ?t)))
       (forall (?t) (=> (and (PARTICULAR ?t)
			     (PRE ?w0 ?y ?t))
			(PC ?w0 ?x ?y ?t)))))

;;; (D64) PC_T: Temporary Total Particip.
(defrelation PC.T (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (PD ?w0 ?y)
       (forall (?z)
	       (=> (and (PARTICULAR ?z)
			(P ?w0 ?z ?y)
			(PRE ?w0 ?z ?t))
		   (PC ?w0 ?x ?z ?t)))))

;;; (D65) PC_T: Total Participation
(defrelation PC.T (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (exists (?t) (and (PARTICULAR ?t)
			 (ql.T ?w0 ?t ?y)
			 (PC.T ?w0 ?x ?y ?t)))))

;;; (D66) mpc: Maximal Participant
(defrelation mpc (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (forall (?z ?t)
	       (=> (and (PARTICULAR ?z)
			(PARTICULAR ?t))
		   (<=> (O ?w0 ?z ?x ?t)
			(exists (?v)
				(and (PARTICULAR ?v)
				     (PC.T ?w0 ?v ?y ?t)
				     (O ?w0 ?z ?v ?t))))))
       (forall (?z ?x1 ?t)
	       (=> (and (PARTICULAR ?z)
			(PARTICULAR ?x1)
			(PARTICULAR ?t)
			(<=> (O ?w0 ?z ?x1 ?t)
			     (exists (?v)
				     (and (PARTICULAR ?v)
					  (PC.T ?w0 ?v ?y ?t)
					  (O ?w0 ?z ?v ?t)))))
		   (= ?x1 ?x)))))

;;; (D67) mppc: Maximal Physical Participant
(defrelation mppc (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (forall (?z ?t)
	       (=> (and (PARTICULAR ?z)
			(PARTICULAR ?t))
		   (<=> (O ?w0 ?z ?x ?t)
			(exists (?v)
				(and (PARTICULAR ?v)
				     (PC.T ?w0 ?v ?y ?t)
				     (PED ?w0 ?z) ; This one like above but with added condition for Physical Endurant.
				     (O ?w0 ?z ?v ?t))))))
       (forall (?z ?x1 ?t)
	       (=> (and (PARTICULAR ?z)
			(PARTICULAR ?x1)
			(PARTICULAR ?t)
			(<=> (O ?w0 ?z ?x1 ?t)
			     (exists (?v)
				     (and (PARTICULAR ?v)
					  (PC.T ?w0 ?v ?y ?t)
					  (PED ?w0 ?z) ; Again, like above, but with Phyical Endurant
					  (O ?w0 ?z ?v ?t)))))
		   (= ?x1 ?x)))))

;;; (D68) lf: Life
(defrelation lf (?w0 ?x ?y) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (WORLD ?w0)
       (forall (?z)
	       (=> (PARTICULAR ?z)
		   (<=> (O ?w0 ?z ?x)
			(exists (?v)
				(and (PARTICULAR ?v)
				     (PC.T ?w0 ?y ?v)
				     (O ?w0 ?z ?v))))))
       (forall (?z ?u)
	       (=> (and (PARTICULAR ?z)
			(PARTICULAR ?u)
			(<=> (O ?w0 ?z ?u)
			     (exists (?v)
				     (and (PARTICULAR ?v)
					  (PC.T ?w0 ?y ?v)
					  (O ?w0 ?z ?v)))))
		   (= ?u ?x)))))

;;; ---- About Dependence  ---------------------------------------------------

;;; DOLCE's concept of dependence involves the notion of presence in time as well as modality.
;;; We mainly use two variants of dependence, adapted from [86]: specific and generic
;;; constant dependence. The former is defined both for particulars and properties, while the
;;; latter only for properties.

;;; (D69) SD: Specific Constant Dependence
;;; A particular x is specifically constantly dependent on another particular y iff,
;;; at any time t, x can’t be present at t unless y is also present at t.
;;; For example, a person might be specifically constantly dependent on its brain. This notion
;;; is naturally extended to properties by defining that a property φ is specifically constantly
;;; dependent on a property ψ iff every φer is specifically constantly dependent on a ψer.
(defrelation SD (?w0 ?x ?y) :=
  (or (and (PARTICULAR ?x)
	   (PARTICULAR ?y)
	   (WORLD ?w0)
	   (forall (?w)
		   (=> (and (WLDR ?w0 ?w) (WORLD ?w))
		       (and (exists (?t) ; present at least at some time...
				    (and (PARTICULAR ?t) (PRE ?w ?x ?t))) ; ?x present at ?t
			    (forall (?t)
				    (=> (and (PARTICULAR ?t) (PRE ?w ?x ?t))
					(PRE ?w ?y ?t)))))))
      (and (UNIVERSAL ?x)
	   (UNIVERSAL ?y)
	   (WORLD ?w0)
	   (DJ ?w0 ?x ?y)
	   (forall (?w ?x1)
		   (=> (and (WLDR ?w0 ?w)
			    (WORLD ?w)
			    (PARTICULAR ?x1)
			    (?x ?w ?x1))
		       (exists (?y1) (and (PARTICULAR ?y1)
					  (?y ?w ?y1)
					  (SD ?w ?x1 ?y1)))))))) ; recur: forall ?x1 exists ?y1..(SD ?x1 ?y1)

;;; (D70) SD: Specific Const. Dep. is included in def (D69)

;;; (D71) GD: Generic Constant Dependence
;;; A property φ is generically constantly dependent on a property ψ iff, for any instance x of
;;; φ, at any time t, x can’t be present at t, unless a certain instance y ofψ is also present at t.
;;; For example, a person might be generically constantly dependent on having a heart.
(defrelation GD (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (DJ ?w0 ?f ?g)
       (forall (?w ?x ?t)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(PARTICULAR ?x)
			(PARTICULAR ?t)
			(?f ?w ?x))
		   (and (exists (?t1)
				(and (PARTICULAR ?t1) (PRE ?w ?x ?t1)))
			(=> (and (At ?w ?t) (PRE ?w ?x ?t))
			    (exists (?y)
				    (and (PARTICULAR ?y)
					 (?g ?w ?y)
					 (PRE ?w ?y ?t)))))))))

;;; (D72) D: Constant Dependence
(defrelation D (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (or (SD ?w0 ?f ?g) (GD ?w0 ?f ?g))))

;;; (D73) OD: One-sided Constant Dependence
(defrelation OD (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (D ?w0 ?f ?g)
       (not (D ?w0 ?g ?f))))

;;; (D74) OSD: One-sided Specific Constant Dependence
(defrelation OSD (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (SD ?w0 ?f ?g)
       (not (D ?w0 ?g ?f))))

;;; (D75) OGD: One-sided Generic Constant Dependence
(defrelation OGD (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (GD ?w0 ?f ?g)
       (not (D ?w0 ?g ?f))))

;;; (D76) MSD: Mutual Specific Constant Dependence
(defrelation MSD (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (SD ?w0 ?f ?g)
       (SD ?w0 ?g ?f)))

;;; (D77) MGD: Mutual Generic Constant Dependence
(defrelation MGD (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (GD ?w0 ?f ?g)
       (GD ?w0 ?g ?f)))

;;; Spatial Dependence
;;; (D78) SD_S: Specific Spatial Dependence
;;; We define spatial dependence as a particular kind of dependence which is grounded
;;; not only in time (presence), but also in space. The definitions are as above with the further
;;; requirement that y has to be spatially co-localised with x in addition of being co-present.
(defrelation SD.S (?w0 ?x ?y) :=
  (or (and (WORLD ?w0)
	   (PARTICULAR ?x)
	   (PARTICULAR ?y)
	   (forall (?w)
		   (=> (and (WLDR ?w0 ?w) (WORLD ?w))
		       (and (exists (?t ?s)
				    (and (PARTICULAR ?t)
					 (PARTICULAR ?s)
					 (PRE ?w ?x ?s ?t)))
			    (forall (?t ?s)
				    (=> (and (PARTICULAR ?t)
					     (PARTICULAR ?s)
					     (PRE ?w ?x ?s ?t))
					(PRE ?w ?y ?s ?t)))))))
      (and (WORLD ?w0)
	   (UNIVERSAL ?x)
	   (UNIVERSAL ?y)
	   (DJ ?w0 ?x ?y)
	   (forall (?w ?x1)
		   (=> (and (WLDR ?w0 ?w)
			    (WORLD ?w)
			    (PARTICULAR ?x1)
			    (?x ?w ?x))
		       (exists (?y1)
			       (and (PARTICULAR ?y1)
				    (?y ?w ?y1)
				    (SD.S ?w ?x1 ?y1))))))))

;;; (D79) PSD_S: Partial Specific Spatial Dependence
(defrelation PSD.S (?w0 ?x ?y) :=
  (or (and (WORLD ?w0)
	   (PARTICULAR ?x)
	   (PARTICULAR ?y)
	   (forall (?w)
		   (=> (and (WLDR ?w0 ?w) (WORLD ?w))
		       (and (exists (?t ?s)
				    (and (PARTICULAR ?t)
					 (PARTICULAR ?s)
					 (PRE ?w ?x ?s ?t)))
			    (forall (?t ?s)
				    (=> (and (PARTICULAR ?t)
					     (PARTICULAR ?s)
					     (PRE ?w ?x ?s ?t))
					(exists (?r)
						(and (PARTICULAR ?r)
						     (PP ?w ?r ?s)
						     (PRE ?w ?y ?r ?t)))))))))
      (and (WORLD ?w0)
	   (UNIVERSAL ?x)
	   (UNIVERSAL ?y)
	   (DJ ?w0 ?x ?y)
	   (forall (?w ?x1)
		   (=> (and (WLDR ?w0 ?w)
			    (WORLD ?w)
			    (PARTICULAR ?x1)
			    (?x ?w ?x1))
		       (exists (?y1)
			       (and (PARTICULAR ?y1)
				    (?y ?w ?y1)
				    (PSD.S ?w ?x1 ?y1))))))))

;;; (D80) P-1SD_S: Inverse Partial Specific Spatial Dependence
(defrelation P1SD.S (?w0 ?x ?y) :=
  (or (and (WORLD ?w0)
	   (PARTICULAR ?x)
	   (PARTICULAR ?y)
	   (forall (?w)
		   (=> (and (WLDR ?w0 ?w) (WORLD ?w))
		       (and (exists (?t ?s)
				    (and (PARTICULAR ?t)
					 (PARTICULAR ?s)
					 (PRE ?w ?x ?s ?t)))
			    (forall (?t ?s)
				    (=> (and (PARTICULAR ?t)
					     (PARTICULAR ?s)
					     (PRE ?w ?x ?s ?t))
					(exists (?r)
						(and (PARTICULAR ?r)
						     (PP ?w ?s ?r)
						     (PRE ?w ?y ?r ?t)))))))))
      (and (WORLD ?w0)
	   (UNIVERSAL ?x)
	   (UNIVERSAL ?y)
	   (DJ ?w0 ?x ?y)
	   (forall (?w ?x1)
		   (=> (and (WLDR ?w0 ?w)
			    (WORLD ?w)
			    (PARTICULAR ?x1)
			    (?x ?w ?x1))
		       (exists (?y1)
			       (and (PARTICULAR ?y1)
				    (?y ?w ?y1)
				    (P1SD.S ?w ?x1 ?y1))))))))

;;; (D81) SD_S
;;;included in def (D78)

;;; (D82) PSD_S
;;;included in def (D79)

;;; (D83) P-1SD_S
;;;included in def (D80)

;;; (D84) GD_S: Generic Spatial Dependence
(defrelation GD.S (?w0 ?f ?g) :=
  (and (WORLD ?w0)
       (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (DJ ?w0 ?f ?g)
       (forall (?w ?x ?s ?t)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(PARTICULAR ?x)
			(PARTICULAR ?t)
			(PARTICULAR ?s)
			(?f ?w ?x))
		   (and (exists (?t1 ?s1)
				(and (PARTICULAR ?t1)
				     (PARTICULAR ?s1)
				     (PRE ?w ?x ?s1 ?t1)))
			(=> (and (At ?w ?t) (PRE ?w ?x ?s ?t))
			    (exists (?y)
				    (and (PARTICULAR ?y)
					 (?g ?w ?y)
					 (PRE ?w ?y ?s ?t)))))))))

;;; (D85) PGD_S: Partial Generic Spatial Dependence
(defrelation PGD.S (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (DJ ?w0 ?f ?g)
       (forall (?w ?x ?s ?t)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w))
		   (PARTICULAR ?x)
		   (PARTICULAR ?s)
		   (PARTICULAR ?t)
		   (?f ?w ?x))
	       (and (exists (?s1 ?t1)
			    (and (PRE ?w ?x ?s1 ?t1)
				 (PARTICULAR ?s1)
				 (PARTICULAR ?t1))
			    (=> (and (At ?w ?t) (PRE ?w ?x ?s ?t))
				(exists (?y ?u)
					(and (PARTICULAR ?y)
					     (PARTICULAR ?u)
					     (?g ?w ?y)
					     (PP ?w ?u ?s)
					     (PRE ?w ?y ?u ?t)))))))))

;;; (D86) P-1GD_S: Inverse Partial Generic Spatial Dependence
(defrelation P1GD.S (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (DJ ?w0 ?f ?g)
       (forall (?w ?x ?s ?t)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w))
		   (PARTICULAR ?x)
		   (PARTICULAR ?s)
		   (PARTICULAR ?t)
		   (?f ?w ?x))
	       (and (exists (?t1 ?s1)
			    (and (PARTICULAR ?t1)
				 (PARTICULAR ?s1)
				 (PRE ?w ?x ?s1 ?t1))
			    (=> (and (At ?w ?t) (PRE ?w ?x ?t))
				(exists (?y ?u)
					(and (PARTICULAR ?y)
					     (PARTICULAR ?u)
					     (?g ?w ?y)
					     (PP ?w ?s ?u)
					     (PRE ?w ?y ?u ?t)))))))))

;;; (D87) DGD_S: Direct Generic Spatial Dependence
(defrelation DGD.S (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (GD.S ?w0 ?f ?g)
       (not (exists (?h) (and (UNIVERSAL ?h)
			      (GD.S ?w0 ?f ?h)
			      (GD.S ?w0 ?h ?g))))))

;;; (D88) Sdt_S: Temporary Specific Spatial Dependence
(defrelation SDt.S (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (SD.S ?w0 ?x ?y)
       (PRE ?w0 ?x ?t)))

;;; From D18: In some cases we shall quantify over properties, and hence one might believe we have
;;; to adopt a second-order logic. However, for our purpose, we need to quantify only over a finite list
;;; of predicates, those that are explicitly introduced in the present theory or in any theory that
;;; specializes (commits to) the present one. We follow therefore the strategy proposed by the Common Logic
;;; working group, which is to view, under suitable conditions, a second-order axiom (or definition) as
;;; syntactic sugar for a finite list of first-order axioms (definitions).

;;; (D89) GDt_S: Temporary Generic Spatial Dependence
(defrelation GDt.S (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?f ?g) (and (UNIVERSAL ?f)
			    (UNIVERSAL ?g)
			    (?f ?w0 ?x)
			    (?g ?w0 ?y)
			    (GD.S ?w0 ?f ?g)
			    (%.S.t ?w0 ?x ?y ?t))))) ; %.S.t is Spatial/temporal coincidence.

;;; (D90) DGDt_S: Temporary Directed Spatial Dependence
(defrelation DGDt.S (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (exists (?f ?g) (and (UNIVERSAL ?f)
			    (UNIVERSAL ?g)
			    (?f ?w0 ?x)
			    (?g ?w0 ?y)
			    (DGD.S ?w0 ?f ?g)
			    (%.S.t ?w0 ?x ?y ?t))))) ; POD ditto

;;; (D91) OSD_S: One-sided Specific Spatial Dependence
(defrelation OSD.S (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (SD.S ?w0 ?f ?g)
       (not (D ?w0 ?g ?f))))

;;; (D92) OGD_S: One-sided Generic Spatial Dependence
(defrelation OGD.S (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (GD.S ?w0 ?f ?g)
       (not (D ?w0 ?g ?f))))

;;; (D93) MSD_S: Mutual Specific Spatial Dependence
(defrelation MSD.S (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (SD.S ?w0 ?f ?g)
       (SD.S ?w0 ?g ?f)))

;;; (D94) MGD_S: Mutual Generic Spatial Dependence
(defrelation MGD.S (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (GD.S ?w0 ?f ?g)
       (GD.S ?w0 ?g ?f)))

;;; ---- About Constitution ---------------------------------------------------
;;; (D95) DK: Direct Constitution
(defrelation DK (?w0 ?x ?y ?t) :=
  (and (PARTICULAR ?x)
       (PARTICULAR ?y)
       (PARTICULAR ?t)
       (WORLD ?w0)
       (K ?w0 ?x ?y ?t)
       (not (exists (?z) (and (PARTICULAR ?z)
			      (K ?w0 ?x ?z ?t)
			      (K ?w0 ?z ?y ?t))))))

;;; (D96) SK: Constantly Specifically Constituted by
(defrelation SK (?w0 ?x ?y) :=
  (or (and (WORLD ?w0)
	   (PARTICULAR ?x)
	   (PARTICULAR ?y)
	   (forall (?w)
		   (=> (and (WLDR ?w0 ?w) (WORLD ?w))
		       (and (exists (?t)
				    (and (PARTICULAR ?t) (PRE ?w ?x ?t))
				    (forall (?t)
					    (=> (and (PARTICULAR ?t)
						     (PRE ?w ?x ?t))
						(K ?w ?y ?x ?t))))))))
      (and (UNIVERSAL ?x)
	   (UNIVERSAL ?y)
	   (WORLD ?w0)
	   (DJ ?w0 ?f ?g)
	   (forall (?w ?x1)
		   (=> (and (WLDR ?w0 ?w)
			    (WORLD ?w)
			    (PARTICULAR ?x1)
			    (?f ?w ?x1))
		       (exists (?y1)
			       (and (PARTICULAR ?y1)
				    (?y ?w ?y1)
				    (SK ?w ?x1 ?y1))))))))

;;; (D97) SK: Constantly Specifically Constituted by
;;;included in def (D96)

;;; (D98) GK: Constantly Generically Constituted by
(defrelation GK (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (DJ ?w0 ?f ?g)
       (forall (?w ?x ?t)
	       (=> (and (WLDR ?w0 ?w)
			(WORLD ?w)
			(PARTICULAR ?x)
			(PARTICULAR ?t)
			(?f ?w ?x)) ; POD variable in predicate position
		   (and (exists (?t1)
				(and (PARTICULAR ?t1) (PRE ?w ?x ?t1)))
			(=> (and (At ?w ?t) (PRE ?w ?x ?t))
			    (exists (?y)
				    (and (PARTICULAR ?y)
					 (?g ?w ?y)
					 (K ?w ?y ?x ?t)))))))))

;;; (D99) K__Constituted by -- K is covered by SK, GK
(defrelation K (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (or (SK ?w0 ?f ?g) (GK ?w0 ?f ?g))))

;;; (D100) OSK: One-sided Cons. Specif. Const. by
(defrelation OSK (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (SK ?w0 ?f ?g)
       (not (K ?w0 ?g ?f))))

;;; (D101) OGK: One-sided Cons. Generic. Const. by
(defrelation OGK (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (GK ?w0 ?f ?g)
       (not (K ?w0 ?g ?f))))

;;; (D102) MSK: Mutual Specific Constitution
(defrelation MSK (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (SK ?w0 ?f ?g)
       (SK ?w0 ?g ?f)))

;;; (D103) MGK: Mutual Generic Constitution
(defrelation MSK (?w0 ?f ?g) :=
  (and (UNIVERSAL ?f)
       (UNIVERSAL ?g)
       (WORLD ?w0)
       (GK ?w0 ?f ?g)
       (GK ?w0 ?g ?f)))

;;; Characterization of functions and relations
;;; ---- About Parthood ---------------------------------------------------
;;; Argument Restrictions
;;; (A1)
;;; Endurants are wholly present; all their proper parts are present any time they are present.
(forall (?w0 ?x ?y)
	(=> (and (P ?w0 ?x ?y)
		 (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y))
	    (and (or (AB ?w0 ?x) (PD ?w0 ?x))
		 (or (AB ?w0 ?y) (PD ?w0 ?y)))))

;;; (A2)
(forall (?w0 ?x ?y)
	(=> (and (P ?w0 ?x ?y)
		 (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y))
	    (<=> (PD ?w0 ?x) (PD ?w0 ?y))))

;;; (A3)
(forall (?w0 ?x ?y)
	(=> (and (P ?w0 ?x ?y)
		 (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y))
	    (<=> (AB ?w0 ?x)
		 (AB ?w0 ?y))))

;;; (A4)
(forall (?w0 ?x ?y ?f) ; POD I'm having trouble with this one!
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (UNIVERSAL ?f) ; ?f has instances. Think of it as a unary relation.
		 (P ?w0 ?x ?y)
		 (SB ?w0 R ?f)  ; Subsumption. What's the deal with R here? Any relation?
		 (X ?f))        ; ?f is a Rigid Universal (that we know about)
	    (<=> (?f ?w0 ?x) (?f ?w0 ?y)))) ; True about the part <=> true about the whole ???

;;; (A5)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (or (AB ?w0 ?x) (PD ?w0 ?x)))
	    (P ?w0 ?x ?x)))

;;; (A6)
(forall (?w0 ?x ?y)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (P ?w0 ?x ?y)
		 (P ?w0 ?y ?x))
	    (= ?x ?y)))

;;; (A7)
(forall (?w0 ?x ?y ?z) ; Transitivity of parthood
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?z)
		 (P ?w0 ?x ?y)
		 (P ?w0 ?y ?z))
	    (P ?w0 ?x ?z)))

;;; (A8)
(forall (?w0 ?x ?y) ; no parthood means things in ?x are not in ?y
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (or (AB ?w0 ?x) (PD ?w0 ?x))
		 (not (P ?w0 ?x ?y)))
	    (exists (?z)
		    (and (PARTICULAR ?x)
			 (P ?w0 ?z ?x)
			 (not (O ?w0 ?z ?y))))))

;;; (A9)
;;; Note: This version in KIF consider only the universal explicitly listed.
;;;[see comment on (D19)]
(forall (?w0 ?f)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f) ; ?f is a function???
		 (exists (?x)
			 (and (PARTICULAR ?x) (?f ?w0 ?x))) ; ?x is an instance of the universal, ?f ???
		 (or (forall (?x)
			     (=> (and (PARTICULAR ?x) (?f ?w0 ?x))
				 (AB ?w0 ?x)))
		     (forall (?x)
			     (=> (and (PARTICULAR ?x) (?f ?w0 ?x))
				 (PD ?w0 ?x)))))
	    (exists (?y)
		    (and (PARTICULAR ?y) (sigma ?w0 ?f ?y))))) ; sigma is general sum

;;; Temporary Parthood
;;; Argument restrictions

;;; (A10)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (P ?w0 ?x ?y ?t))
	    (and (ED ?w0 ?x) (ED ?w0 ?y) (T ?w0 ?t))))

;;; (A11)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (P ?w0 ?x ?y ?t))
	    (<=> (PED ?w0 ?x) (PED ?w0 ?y))))

;;; (A12)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (P ?w0 ?x ?y ?t))
	    (<=> (NPED ?w0 ?x) (NPED ?w0 ?y))))

;;; - - -  Ground Axioms of Parthood - - - - - - - - -
;;; (A13)
(forall (?w0 ?x ?y ?z ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?z)
		 (PARTICULAR ?t)
		 (P ?w0 ?x ?y ?t)
		 (P ?w0 ?y ?z ?t))
	    (P ?w0 ?x ?z ?t)))

;;; (A14)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (ED ?w0 ?x)
		 (ED ?w0 ?y)
		 (PRE ?w0 ?x ?t)
		 (PRE ?w0 ?y ?t)
		 (not (P ?w0 ?x ?y ?t)))
	    (exists (?z)
		    (and (PARTICULAR ?z)
			 (P ?w0 ?z ?x ?t)
			 (not (O ?w0 ?z ?y ?t))))))

;;; (A15)
;;;[see comment on (D19)]
(forall (?w0 ?f)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (exists (?x)
			 (and (PARTICULAR ?x) (?f ?w0 ?x)))
		 (forall (?x)
			 (=> (and (PARTICULAR ?x) (?f ?w0 ?x))
			     (ED ?w0 ?x))))
	    (exists (?y)
		    (and (PARTICULAR ?y) (sigma.t ?w0 ?f ?y)))))

;;; Links With Other Primitives
;;; (A16)
(forall (?w0 ?x ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?t)
		 (ED ?w0 ?x)
		 (PRE ?w0 ?x ?t))
	    (P ?w0 ?x ?x ?t)))

;;; (A17)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (P ?w0 ?x ?y ?t))
	    (and (PRE ?w0 ?x ?t) (PRE ?w0 ?y ?t))))

;;; (A18)
(forall (?w0 ?x ?y ?t ?u)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (PARTICULAR ?u)
		 (P ?w0 ?x ?y ?t)
		 (P ?w0 ?u ?t))
	    (P ?w0 ?x ?y ?u)))

;;; (A19)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (PED ?w0 ?x)
		 (P ?w0 ?x ?y ?t))
	    (incl.S.t ?w0 ?x ?y ?t)))

;;; ========================= Other Constitution Axioms ===============================================
;;; Argument restrictions
;;; (A20)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (K ?w0 ?x ?y ?t))
	    (and (or (ED ?w0 ?x) (PD ?w0 ?x))
		 (or (ED ?w0 ?y) (PD ?w0 ?y))
		 (T ?w0 ?t))))

;;; (A21)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (K ?w0 ?x ?y ?t))
	    (<=> (PED ?w0 ?x) (PED ?w0 ?y))))

;;; (A22)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (K ?w0 ?x ?y ?t))
	    (<=> (NPED ?w0 ?x) (NPED ?w0 ?y))))

;;; (A23)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (K ?w0 ?x ?y ?t))
	    (<=> (PD ?w0 ?x) (PD ?w0 ?y))))

;;; Ground Axioms
;;; (A24)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (K ?w0 ?x ?y ?t))
	    (not (K ?w0 ?y ?x ?t))))

;;; (A25)
(forall (?w0 ?x ?y ?z ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?z)
		 (PARTICULAR ?t)
		 (K ?w0 ?x ?y ?t)
		 (K ?w0 ?y ?z ?t))
	    (K ?w0 ?x ?z ?t)))

;;; ----- Links with other Primitives ----------------------------------------
;;; (A26)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (K ?w0 ?x ?y ?t))
	    (and (PRE ?w0 ?x ?t) (PRE ?w0 ?y ?t))))

;;; (A27)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t))
	    (<=> (K ?w0 ?x ?y ?t)
		 (forall (?u)
			 (=> (and (PARTICULAR ?u) (P ?w0 ?u ?t))
			     (K ?w0 ?x ?y ?u))))))

;;; (A28)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (PED ?w0 ?x)
		 (K ?w0 ?x ?y ?t))
	    (%.S.t ?w0 ?x ?y ?t)))

;;; (A29)
(forall (?w0 ?x ?y ?y1 ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?y1)
		 (PARTICULAR ?t)
		 (K ?w0 ?x ?y ?t)
		 (P ?w0 ?y1 ?y ?t))
	    (exists (?x1)
		    (and (PARTICULAR ?x1)
			 (P ?w0 ?x1 ?x ?t)
			 (K ?w0 ?x1 ?y1 ?t)))))

;;; Links between Categories
;;; (A30)
;;; Non-agentive PO generically constituted from matter.
(forall (?w0) (=> (WORLD ?w0) (GK ?w0 NAPO M)))

;;; (A31)
;;; Agentive PO generically constituted from NAPO (why not just M).
(forall (?w0) (=> (WORLD ?w0) (GK ?w0 APO NAPO)))

;;; (A32)
;;; Society generically constituted from social agent.
(forall (?w0) (=> (WORLD ?w0) (GK ?w0 SC SAG)))

;;; ======================== Other Participation Axioms =====================================
; Argument restrictions
;(A33)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (PC ?w0 ?x ?y ?t))
	    (and (ED ?w0 ?x) (PD ?w0 ?y) (T ?w0 ?t))))

;;; Existential Axioms
;;; (a34)
(forall (?w0 ?x ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?t)
		 (PD ?w0 ?x)
		 (PRE ?w0 ?x ?t))
	    (exists (?y)
		    (and (PARTICULAR ?y) (PC ?w0 ?y ?x ?t)))))

;;; (a35)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (ED ?w0 ?x))
	    (exists (?y ?t)
		    (and (PARTICULAR ?y) (PARTICULAR ?t) (PC ?w0 ?x ?y ?t)))))

;;; Links with other Primitives
;;; (a36)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (PC ?w0 ?x ?y ?t))
	    (and (PRE ?w0 ?x ?t) (PRE ?w0 ?y ?t))))

;;; (a37)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t))
	    (<=> (PC ?w0 ?x ?y ?t)
		 (forall (?u)
			 (=> (and (PARTICULAR ?u) (P ?w0 ?u ?t))
			     (PC ?w0 ?x ?y ?u))))))

;;; ======================== Quality ========================================
;;; Argument restrictions:
;;; (a38) - ?x is a Quality, ?y is Quality, Endurant, or Perdurant.
(forall (?w0 ?x ?y)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (qt ?w0 ?x ?y))
	    (and (Q ?w0 ?x)
		 (or (Q ?w0 ?y) (ED ?w0 ?y) (PD ?w0 ?y)))))

;;; (a39)
;;; Argument restriction: If there is a qt relationship (qt ?x ?y) then ?x is a
;;; Temporal Quality TQ IFF ?y is a Temporal Quality or Perdurant.
(forall (?w0 ?x ?y)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (qt ?w0 ?x ?y))
	    (<=> (TQ ?w0 ?x)
		 (or (TQ ?w0 ?y) (PD ?w0 ?y)))))

;;; (a40)
;;; Argument restriction: If there is a qt relationship (qt ?x ?y) then ?x is a
;;; Physical Quality PQ IFF ?y is a Physical Quality or Physical Endurant.
(forall (?w0 ?x ?y)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (qt ?w0 ?x ?y))
	    (<=> (PQ ?w0 ?x)
		 (or (PQ ?w0 ?y) (PED ?w0 ?y)))))

;;; (a41)
;;; Argument restriction: If there is a qt relationship (qt ?x ?y) then ?x is a
;;; Abstract Quality IFF ?y is an Abstract Quality or Non-Physical Endurant.
(forall (?w0 ?x ?y)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (qt ?w0 ?x ?y))
	    (<=> (AQ ?w0 ?x)
		 (or (AQ ?w0 ?y) (NPED ?w0 ?y)))))

;;; Ground Axioms of qt:
;;; (a42)
;;; qt is transitive
(forall (?w0 ?x ?y ?z)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?z)
		 (qt ?w0 ?x ?y)
		 (qt ?w0 ?y ?z))
	    (qt ?w0 ?x ?z)))

;;; (a43)
;;; Two things with the same Quality are the same thing.
(forall (?w0 ?x ?y ?z)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?z)
		 (qt ?w0 ?x ?y)
		 (qt ?w0 ?x ?z))
	    (= ?y ?z)))

;;; (a44)
(forall (?w0 ?f ?x ?y ?z)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?z)
		 (qtf ?w0 ?f ?x ?y)
		 (qtf ?w0 ?f ?z ?y))
	    (= ?x ?z)))

;;; (a45)
;;; In a transitive relationship between quality types, the properties are disjoint.
(forall (?w0 ?f ?g ?x ?y ?z)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (UNIVERSAL ?g)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?z)
		 (qtf ?w0 ?f ?x ?y)
		 (qtf ?w0 ?g ?y ?z))
	    (DJ ?w0 ?f ?g)))

;;; Existential Axioms:
;;; (a46)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (TQ ?w0 ?x))
	    (exists (?y)
		    (and (PARTICULAR ?y)
			 (qt ?w0 ?x ?y)
			 (PD ?w0 ?y)
			 (forall (?z)
				 (=> (and (PARTICULAR ?z)
					  (qt ?w0 ?x ?z)
					  (PD ?w0 ?z))
				     (= ?z ?y)))))))

;;; (a47)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (PQ ?w0 ?x))
	    (exists (?y)
		    (and (PARTICULAR ?y)
			 (qt ?w0 ?x ?y)
			 (PED ?w0 ?y)
			 (forall (?z)
				 (=> (and (PARTICULAR ?z)
					  (qt ?w0 ?x ?z)
					  (PED ?w0 ?z))
				     (= ?z ?y)))))))

;;; (a48)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (AQ ?w0 ?x))
	    (exists (?y)
		    (and (PARTICULAR ?y)
			 (qt ?w0 ?x ?y)
			 (NPED ?w0 ?y)
			 (forall (?z)
				 (=> (and (PARTICULAR ?z)
					  (qt ?w0 ?x ?z)
					  (NPED ?w0 ?z))
				     (= ?z ?y)))))))

;;; (a49)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (PD ?w0 ?x))
	    (exists (?y)
		    (and (PARTICULAR ?y) (qtf ?w0 TL ?y ?x)))))

;;; (a50)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (PED ?w0 ?x))
	    (exists (?y)
		    (and (PARTICULAR ?y) (qtf ?w0 SL ?y ?x)))))

;;; (a51)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (NPED ?w0 ?x))
	    (exists (?f ?y)
		    (and (PARTICULAR ?y)
			 (UNIVERSAL ?f)
			 (SBL ?w0 AQ ?f)
			 (qtf ?w0 ?f ?y ?x)))))

;;; ======================= Other Quale Axioms ===============================================
;;; Immediate Quale

;;; Argument restrictions:

;;; (A52)
;;; Defines argument types of ql: ?x must be a Temporal Region (subtype of Abstract), ?y must be a TQ (subtype of Quality).
(forall (?w0 ?x ?y)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (ql ?w0 ?x ?y))
	    (and (TR ?w0 ?x) (TQ ?w0 ?y))))

;;; (A53)
;;; If ?y is a Temporal Location (Quality), ?x is a Time Interval (Abstract).
(forall (?w0 ?x ?y)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (ql ?w0 ?x ?y)
		 (TL ?w0 ?y))
	    (T ?w0 ?x)))

;;; Basic Axioms:
;;; (A54)
;;; If two quales refer to the same Abstract, they refer to the same Quality.
(forall (?w0 ?x ?x1 ?y)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?x1)
		 (PARTICULAR ?y)
		 (ql ?w0 ?x  ?y)
		 (ql ?w0 ?x1 ?y))
	    (= ?x ?x1)))

;;; Existential Axioms:
;;; (A55)
;;; There is an Abstract entity for every Temporal Quality ?x.
(forall (?w0 ?x)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (TQ ?w0 ?x))
	    (exists (?y)
		    (and (PARTICULAR ?y) (ql ?w0 ?y ?x)))))

;;; (A56)
;;;
(forall (?w0 ?f ?x ?y ?r ?r1)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?r)
		 (PARTICULAR ?r1)
		 (L.X ?w0 ?f)        ; ?f is a known leaf rigid universal
		 (?f ?w0 ?x)         ; ?f is true of both Quality ?x...
		 (?f ?w0 ?y)         ; ...and Quality ?y
		 (ql ?w0 ?r  ?x)     ; for any Abstract entities (quality region typically) ?r with a quale to ?x...
		 (ql ?w0 ?r1 ?y))    ; ... and ?r1 with a quale to ?y.
	    (exists (?g)
		    (and (UNIVERSAL ?g)
			 (L.X ?w0 ?g)        ; Then there is a leaf rigid universal ?g
			 (?g ?w0 ?r)         ; that holds for both quality regions.
			 (?g ?w0 ?r1)))))

;;; (A57)
(forall (?w0 ?f ?x ?y ?r ?r1)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?r)
		 (PARTICULAR ?r1)
		 (L.X ?w0 ?f)          ; if ?f is a leaf rigid universal
		 (?f ?w0 ?x)           ; that holds for Quality ?x
		 (not (?f ?w0 ?y))     ; but not for Quality ?y,
		 (ql ?w0 ?r  ?x)       ; and ?r  is the quality region of ?x
		 (ql ?w0 ?r1 ?y))      ; and ?r1 is the quality region of ?y,
	    (not (exists (?g)
			 (and (UNIVERSAL ?g)
			      (L.X ?w0 ?g)             ; then there isn't a leaf rigid universal
			      (?g ?w0 ?r)              ; that holds for both of these quality regions.
			      (?g ?w0 ?r1))))))

;;;------ Temporary Quale ------------------------------------------------------
;;;; (A58)
;;;; Argument restrictions:
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (ql ?w0 ?x ?y ?t))
	    (and (or (PR ?w0 ?x) (AR ?w0 ?x)) ; Physical Region o Abstract Retion
		 (or (PQ ?w0 ?y) (AQ ?w0 ?y)) ; Physical Quality or Absract Quality
		 (T ?w0 ?t))))

;;; (A59)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (ql ?w0 ?x ?y ?t))
	    (<=> (PR ?w0 ?x) (PQ ?w0 ?y))))

;;; (A60)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (ql ?w0 ?x ?y ?t))
	    (<=> (AR ?w0 ?x) (AQ ?w0 ?y))))

;;; (A61)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (ql ?w0 ?x ?y ?t)
		 (SL ?w0 ?y))
	    (S ?w0 ?x)))

;;; Existential Axioms:
;;; (A62)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (or (PQ ?w0 ?x) (AQ ?w0 ?x))
		 (PRE ?w0 ?x ?t))
	    (exists (?y)
		    (and (PARTICULAR ?y) (ql ?w0 ?y ?x ?t)))))

;;; (A63)
(forall (?w0 ?f ?x ?y ?r ?r1 ?t)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?r)
		 (PARTICULAR ?r1)
		 (PARTICULAR ?t)
		 (L.X ?w0 ?f)
		 (?f ?w0 ?x)
		 (?f ?w0 ?y)
		 (ql ?w0 ?r ?x ?t)
		 (ql ?w0 ?r1 ?y ?t))
	    (exists (?g)
		    (and (UNIVERSAL ?g)
			 (L.X ?w0 ?g)
			 (?g ?w0 ?r)
			 (?g ?w0 ?r1)))))

;;; (A64)
(forall (?w0 ?f ?x ?y ?r ?r1 ?t)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?r)
		 (PARTICULAR ?r1)
		 (PARTICULAR ?t)
		 (L.X ?w0 ?f)
		 (?f ?w0 ?x)
		 (not (?f ?w0 ?y))
		 (ql ?w0 ?r ?x ?t)
		 (ql ?w0 ?r1 ?y ?t))
	    (not (exists (?g)
			 (and (UNIVERSAL ?g)
			      (L.X ?w0 ?g)
			      (?g ?w0 ?r)
			      (?g ?w0 ?r1))))))

;;;============ Link with Parthood and extension: =====================
;;; (A65)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (ql ?w0 ?x ?y ?t))
	    (PRE ?w0 ?y ?t)))

;;; (A66)
(forall (?w0 ?x ?y ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t))
	    (<=> (ql ?w0 ?x ?y ?t)
		 (forall (?u)
			 (=> (and (PARTICULAR ?u) (P ?w0 ?u ?t))
			     (ql ?w0 ?x ?y ?u))))))

;;;============= Dependence and Spatial Dependence ========================
;;; Links between categories
;;; (A67)
;;; There is a mutual specific constant dependency between Perdurants and Temporal Qualities.
(forall (?w0) (=> (WORLD ?w0) (MSD ?w0 TQ PD)))

;;; (A68)
;;; There is a mutual specific constant dependency (spatial) between a Physical Qualities and Physical Enderants.
(forall (?w0) (=> (WORLD ?w0) (MSD.S ?w0 PQ PED)))

;;; (A69)
;;;
(forall (?w0) (=> (WORLD ?w0) (MSD ?w0 AQ NPED)))

;;; (A70)
(forall (?w0) (=> (WORLD ?w0) (OGD ?w0 F NAPO)))

;;; (A71)
;;; Mental objects depend specifically on an agentive physical object.
(forall (?w0) (=> (WORLD ?w0) (OSD ?w0 MOB APO)))

;;; (A72)
;;; social agents depend generically on an agentivie physical object.
(forall (?w0) (=> (WORLD ?w0) (OGD ?w0 SAG APO)))

;;; (A73)
(forall (?w0) (=> (WORLD ?w0) (OGD ?w0 NASO SC)))

;;; (A74)
(forall (?w0) (=> (WORLD ?w0) (OD ?w0 NPED PED)))

;;;================= Characterization of Categories ====================

;;; Perdurant

;;; Conditions on Perdurant's Leaves:

;;; Homeomeric if and only if all its temporal parts are described by the very expression used
;;; for the whole occurrence (e.g. sitting vs. trip from A to B).
;;; Cumulative: whether it holds that the mereological sum of two instances is also an instance.
;;; Sitting is cumulative since the sum of two sittings is still sitting.
;;; Cumulative true of all statives (ST and PRO).
;;; Anti-cumulative true of all eventives (ACC and ACH).
;;; ACH and ACC are anti-cumulative because the mereological sum of two instances are just two distinct instances.

;;; ACH - anti-cumulative and atomic      (A75)  Eventive
;;; ACC - anti-cumulative and anti-atomic (A76)  Eventive
;;; ST  - cumulative and homeomerous      (A77)  Stative
;;; PRO - cumulative and anti-homeomerous (A78)  Stative

;;; (A75)
(forall (?w0 ?f)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PSBL ?w0 ACH ?f)) ; Leaf property subsumed by
	    (and (NEP.S ?w0 ?f) (CM% ?w0 ?f) (AT ?w0 ?f))))

;;; (A76)
(forall (?w0 ?f)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PSBL ?w0 ACC ?f)) ; Leaf property subsumed by
	    (and (NEP.S ?w0 ?f) (CM% ?w0 ?f) (AT% ?w0 ?f))))

;;; (A77)
(forall (?w0 ?f)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PSBL ?w0 ST ?f)) ; Leaf property subsumed by
	    (and (NEP.S ?w0 ?f) (CM ?w0 ?f) (HOM ?w0 ?f))))

;;; (A78)
(forall (?w0 ?f)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (PSBL ?w0 PRO ?f)) ; Leaf property subsumed by
	    (and (NEP.S ?w0 ?f) (CM ?w0 ?f) (HOM% ?w0 ?f))))

;;; Existential Axioms
;;; (A79)

(forall (?w0)
	(=> (WORLD ?w0)
	    (exists (?f) (and (UNIVERSAL ?f) (PSBL ?w0 ACH ?f)))))

;;; (A80)
(forall (?w0)
	(=> (WORLD ?w0)
	    (exists (?f) (and (UNIVERSAL ?f) (PSBL ?w0 ACC ?f)))))

;;; (A81)
(forall (?w0)
	(=> (WORLD ?w0)
	    (exists (?f) (and (UNIVERSAL ?f) (PSBL ?w0 ST ?f)))))

;;; (A82)
(forall (?w0)
	(=> (WORLD ?w0)
	    (exists (?f) (and (UNIVERSAL ?f) (PSBL ?w0 PRO ?f)))))

;;; =========================================
;;; THEOREMS
;;; General Properties
;;; (T1)
(forall (?w0 ?x ?t)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (PARTICULAR ?t))
	    (not (K ?w0 ?x ?x ?t))))

;;; (T2)
(forall (?w0 ?f ?g)
	(=> (and (WORLD ?w0) (UNIVERSAL ?f) (UNIVERSAL ?g) (SK ?w0 ?f ?g))
	    (SD ?w0 ?f ?g)))

;;; (T3)
(forall (?w0 ?f ?g)
	(=> (and (WORLD ?w0) (UNIVERSAL ?f) (UNIVERSAL ?g) (GK ?w0 ?f ?g))
	    (GD ?w0 ?f ?g)))

;;; (T4)
(forall (?w0 ?f ?g ?h)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (UNIVERSAL ?g)
		 (UNIVERSAL ?h)
		 (SK ?w0 ?f ?g)
		 (SK ?w0 ?g ?h)
		 (DJ ?w0 ?f ?h))
	    (SK ?w0 ?f ?h)))

;;; (T5)
(forall (?w0 ?f ?g ?h)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (UNIVERSAL ?g)
		 (UNIVERSAL ?h)
		 (GK ?w0 ?f ?g)
		 (GK ?w0 ?g ?h)
		 (DJ ?w0 ?f ?h))
	    (GK ?w0 ?f ?h)))

;;; Ground Properties
;;; (T6)
(forall (?w0 ?x ?t)
	(=> (and (WORLD ?w0) (PARTICULAR ?x) (PARTICULAR ?t))
	    (not (PC ?w0 ?x ?x ?t))))

;;; (T7)
(forall (?w0 ?x ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?y)
		 (PARTICULAR ?t)
		 (PC ?w0 ?x ?y ?t))
	    (not (PC ?w0 ?y ?x ?t))))

;;; (T8)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0) (PARTICULAR ?x))
	    (not (qt ?w0 ?x ?x))))

;;; General properties
;;; (T9)
(forall (?w0 ?f ?g ?h)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (UNIVERSAL ?g)
		 (UNIVERSAL ?h)
		 (SD ?w0 ?f ?g)
		 (SD ?w0 ?g ?h)
		 (DJ ?w0 ?f ?h))
	    (SD ?w0 ?f ?h)))

;;; (T10)
(forall (?w0 ?f ?g ?h)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (UNIVERSAL ?g)
		 (UNIVERSAL ?h)
		 (GD ?w0 ?f ?g)
		 (GD ?w0 ?g ?h)
		 (DJ ?w0 ?f ?h))
	    (GD ?w0 ?f ?h)))

;;; (T11)
(forall (?w0 ?f ?g ?h)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (UNIVERSAL ?g)
		 (UNIVERSAL ?h)
		 (SD ?w0 ?f ?g)
		 (GD ?w0 ?g ?h)
		 (DJ ?w0 ?f ?h))
	    (GD ?w0 ?f ?h)))

;;; (T12)
(forall (?w0 ?f ?g ?h)
	(=> (and (WORLD ?w0)
		 (UNIVERSAL ?f)
		 (UNIVERSAL ?g)
		 (UNIVERSAL ?h)
		 (GD ?w0 ?f ?g)
		 (SD ?w0 ?g ?h)
		 (DJ ?w0 ?f ?h))
	    (GD ?w0 ?f ?h)))

;;; (T13)
(forall (?w0 ?f ?g)
	(=> (and (WORLD ?w0) (UNIVERSAL ?f) (UNIVERSAL ?g) (SD.S ?w0 ?f ?g))
	    (SD ?w0 ?f ?g)))

;;; (T14)
(forall (?w0 ?f ?g)
	(=> (and (WORLD ?w0) (UNIVERSAL ?f) (UNIVERSAL ?g) (GD.S ?w0 ?f ?g))
	    (GD ?w0 ?f ?g)))

;;; Being Present
;;; (T15)
(forall (?w0 ?x)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (or (ED ?w0 ?x) (PD ?w0 ?x) (Q ?w0 ?x)))
	    (exists (?t)
		    (and (PARTICULAR ?t) (PRE ?w0 ?x ?t)))))

;;; (T16)
(forall (?w0 ?x ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?t)
		 (or (PED ?w0 ?x) (PQ ?w0 ?x))
		 (PRE ?w0 ?x ?t))
	    (exists (?s)
		    (and (PARTICULAR ?s) (PRE ?w0 ?s ?x ?t)))))

;;; (T17)
(forall (?w0 ?x ?t ?t1)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?t)
		 (PARTICULAR ?t1)
		 (PRE ?w0 ?x ?t)
		 (P ?w0 ?t1 ?t))
	    (PRE ?w0 ?x ?t1)))

;;; (T18)
(forall (?w0 ?x ?s ?t)
	(=> (and (WORLD ?w0)
		 (PARTICULAR ?x)
		 (PARTICULAR ?s)
		 (PARTICULAR ?t)
		 (PRE ?w0 ?s ?x ?t))
	    (PRE ?w0 ?x ?t)))
#+end_src
