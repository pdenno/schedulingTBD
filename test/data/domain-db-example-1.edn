{:domain/ename "kiwi-example",
 :sys/body
 {:sys/typ :domain,
  :domain/elems
  [{:operator/ename "kiwi-example.!pickup",
    :sys/body
    {:sys/typ :operator,
     :operator/head {:sys/typ :atom, :atom/predicate !pickup, :atom/roles [{:role/val #:box{:sym ?a}, :sys/pos 1}]},
     :operator/a-list [{:sys/typ :atom, :atom/predicate have, :atom/roles [{:role/val #:box{:sym ?a}, :sys/pos 1}], :sys/pos 1}]},
    :sys/pos 1}
   {:operator/ename "kiwi-example.!drop",
    :sys/body
    {:sys/typ :operator,
     :operator/head {:sys/typ :atom, :atom/predicate !drop, :atom/roles [{:role/val #:box{:sym ?a}, :sys/pos 1}]},
     :operator/preconds [{:sys/typ :atom, :atom/predicate have, :atom/roles [{:role/val #:box{:sym ?a}, :sys/pos 1}], :sys/pos 1}],
     :operator/d-list [{:sys/typ :atom, :atom/predicate have, :atom/roles [{:role/val #:box{:sym ?a}, :sys/pos 1}], :sys/pos 1}]},
    :sys/pos 2}
   {:method/ename "kiwi-example.swap_?x_?y",
    :sys/body
    {:sys/typ :method,
     :method/head
     {:sys/typ :atom, :atom/predicate swap, :atom/roles [{:role/val #:box{:sym ?x}, :sys/pos 1} {:role/val #:box{:sym ?y}, :sys/pos 2}]},
     :method/rhs
     [{:method/preconds [{:sys/typ :atom, :atom/predicate have, :atom/roles [{:role/val #:box{:sym ?x}, :sys/pos 1}], :sys/pos 1}],
       :method/task-list
       {:sys/typ :task-list,
        :task-list/elems
        [{:sys/typ :task-atom, :atom/predicate !drop, :atom/roles [{:role/val #:box{:sym ?x}, :sys/pos 1}], :sys/pos 1}
         {:sys/typ :task-atom, :atom/predicate !pickup, :atom/roles [{:role/val #:box{:sym ?y}, :sys/pos 1}], :sys/pos 2}]},
       :sys/pos 1}
      {:method/preconds [{:sys/typ :atom, :atom/predicate have, :atom/roles [{:role/val #:box{:sym ?y}, :sys/pos 1}], :sys/pos 1}],
       :method/task-list
       {:sys/typ :task-list,
        :task-list/elems
        [{:sys/typ :task-atom, :atom/predicate !drop, :atom/roles [{:role/val #:box{:sym ?y}, :sys/pos 1}], :sys/pos 1}
         {:sys/typ :task-atom, :atom/predicate !pickup, :atom/roles [{:role/val #:box{:sym ?x}, :sys/pos 1}], :sys/pos 2}]},
       :sys/pos 2}]},
    :sys/pos 3}]}}
