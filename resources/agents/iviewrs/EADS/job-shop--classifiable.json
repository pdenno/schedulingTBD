{
  "message-type" : "EADS-INSTRUCTIONS",
  "interviewer-agent" : "process",
  "interview-objective" : "These EADS-INSTRUCTIONS assumes that\n  (1) the interviewees' production processes are organized as a job shop, and\n  (2) each of the jobs they undertake can be classified as following one of a small set of process plans.\nThe purpose of these EADS-INSTRUCTIONS are to describe these process plans.\nThere are a few ways to go about this:\n  *  One way is to describe a single encompassing flow-shop-like process where some tasks are optional for some jobs.\n     In this arrangement, we'd expect information about what processes are optional to accompany each job.\n     In this arrangement, it is not your responsibility to relate jobs to processes; just capture the processes.\n\n  *  A second way is to describe a collection of distinct flow-shop-like process plans, one of which applies to every job they will encounter.\n     You would choose this if there are permutations in the ordering of tasks among the jobs.\n     (You will see from the EADS data structure below, that it does not provide a way describe these permuatations, thus the proliferation of process plans.)\n     (By the way, you are free to mark tasks as optional in this approach, just as you might in the single encompassing flow-shop-like process described in the previous bullet.)\n     You would choose this approach if, for example, they make a few very different products (like, for example, t-shirts and running shoes).\n     It is possible that if they do make a few very different products, that they actually are talking about scheduling multiple production lines!\n     There is a boolean in the EADS, 'multiple-production-lines?' that you can set to true if you learn that they have in mind scheduling multiple flow-shop-like production lines;\n     We'll deal with this problem later, in the resources interview.\nNote that the data structures used to define processes in these EADS instructions are like the one in the process/flow-shop EADS instructions.\nThe principal differences are that (1) this one allows for multiple job-level processes, and (2) this one has the multiple-production-lines? property described above.",
  "EADS" : {
    "EADS-id" : "process/job-shop--classifiable",
    "multiple-production-lines?" : {
      "val" : false,
      "comment" : "This property is true only in the case that you learn that they run multiple flow-shop-like production lines that each support distinct process flows \nappropriate for only some jobs."
    },
    "job-level-processes" : {
      "comment" : "This is a list of flow-shop-like processes as described in the interview-objectives above.\nThe list only has one job-level process in it, but in your interveiw you can define many as described in the interview-objectives.",
      "val" : [ {
        "process-id" : {
          "val" : "pencil-manufacturing",
          "comment" : "This is the top-level process. You can name it as you see fit; don't ask the interviewees."
        },
        "inputs" : {
          "val" : [ "graphite", "clay", "water", "cedar wood", "metal", "eraser material", "paint" ],
          "comment" : "These are all the raw materials used to make the product. You can figure this out by looking at all the raw materials in the leaf processes."
        },
        "outputs" : {
          "val" : [ {
            "item-id" : "finished pencils",
            "quantity" : {
              "units" : "finished pencils",
              "value-string" : "100000"
            }
          } ],
          "comment" : "inputs and outputs can either be simple strings like we used above, 'graphite', clay..., or objects like this, with an 'item-id' and 'quantity'.\nUse disgression (mindful of the questioning budget) about where you ask for quantities. Start simple and pursue details were the budget allows."
        },
        "resources" : {
          "val" : [ "extruder", "kiln", "milling machine", "glue applicator", "shaping machine" ],
          "comment" : "Resources, unlike inputs, are durable and reusable. Do not ask about quantities of resources; that's a conversation for another interviewer."
        },
        "duration" : {
          "val" : {
            "units" : "hours",
            "value-string" : "4"
          },
          "comment" : "We use a string for 'value-string' in case interviewees answer it something like 'it varies'"
        },
        "subprocesses" : [ {
          "process-id" : "graphite-core-production",
          "inputs" : [ "graphite", "clay", "water" ],
          "outputs" : [ {
            "item-id" : "graphite core",
            "quantity" : {
              "units" : "graphite cores",
              "value-string" : "100000"
            }
          } ],
          "resources" : [ "mixer", "extruder", "kiln" ],
          "subprocesses" : [ {
            "process-id" : "mix-graphite-and-clay",
            "inputs" : [ "graphite", "clay", "water" ],
            "outputs" : [ {
              "item-id" : "graphite-clay paste",
              "quantity" : {
                "units" : "liters",
                "value-string" : "100"
              }
            } ],
            "resources" : [ "mixer" ],
            "duration" : {
              "units" : "hours",
              "value-string" : "1"
            },
            "subprocesses" : {
              "val" : [ ],
              "comment" : "We use empty array val values to signify that we don't think there are any interesting sub-process from the standpoint of scheduling.\nOf course, this could be updated later if subsequent discussion suggests we are wrong."
            }
          }, {
            "process-id" : "extrude-core",
            "inputs" : [ "graphite-clay paste" ],
            "outputs" : [ {
              "item-id" : "extruded graphite rods",
              "quantity" : {
                "units" : "extruded graphite core",
                "value-string" : "100000"
              }
            } ],
            "resources" : [ "extruder" ],
            "duration" : {
              "units" : "minutes",
              "value-string" : "20"
            },
            "subprocesses" : [ ]
          }, {
            "process-id" : "dry-and-bake-core",
            "inputs" : [ "extruded graphite rods" ],
            "outputs" : [ {
              "item-id" : "extruded graphite rods",
              "quantity" : {
                "units" : "extruded graphite core",
                "value-string" : "100000"
              }
            } ],
            "resources" : [ "kiln" ],
            "duration" : {
              "units" : "hours",
              "value-string" : "2"
            },
            "subprocesses" : [ ]
          } ]
        }, {
          "process-id" : "wood-casing-production",
          "inputs" : [ "cedar wood" ],
          "outputs" : [ "wood slats with grooves" ],
          "resources" : [ "milling machine" ],
          "subprocess-flow" : {
            "val" : "individuals-from-batch",
            "comment" : "The string 'individuals-from-batch' means that it isn't necessary to wait for all the slats to be created;\nyou can start 'cut-grooves-in-slats' as soon as the first slat is available."
          },
          "duration" : {
            "val" : {
              "units" : "hours",
              "value-string" : "2"
            },
            "comment" : "Because 'individuals-from-batch', this process's duration is (roughly speaking) the same as maximum of the two subprocesses."
          },
          "subprocesses" : [ {
            "process-id" : "mill-wood-slats",
            "inputs" : [ "cedar wood" ],
            "outputs" : [ "milled wood slats" ],
            "resources" : [ "milling machine" ],
            "duration" : {
              "units" : "hours",
              "value-string" : "2"
            },
            "subprocess-flow" : {
              "val" : "individuals-from-batch",
              "comment" : "'sub-process-flow' is about whether a batch must move through production steps as a batch or, alternatively, individuals from the batch can move.\nThe string value 'individuals-from-batch' here means that it isn't necessary to wait for all the slats to be created, the process 'cut-grooves-in-slats'\ncan start as soon as the first slat is available."
            },
            "subprocesses" : [ ]
          }, {
            "process-id" : "cut-grooves-in-slats",
            "inputs" : [ "milled wood slats" ],
            "outputs" : [ "wood slats with grooves" ],
            "resources" : [ "groove cutter" ],
            "duration" : {
              "units" : "hours",
              "value-string" : "2"
            },
            "subprocesses" : [ ]
          } ]
        }, {
          "process-id" : "assembly",
          "inputs" : {
            "val" : [ {
              "item-id" : "graphite core",
              "from" : "graphite-core-production"
            }, {
              "item-id" : "wood slats with grooves",
              "from" : "wood-casing-production"
            }, "metal", "erasers", "paint" ],
            "comment" : "The 'from' property names a process that must occur before a process that uses it as an input (e.g. this 'assembly' process).\nThe 'from' property is essential to understanding process ordering and potential for concurrency."
          },
          "outputs" : [ "finished pencil" ],
          "resources" : [ "glue applicator", "shaping machine" ],
          "subprocesses" : [ {
            "process-id" : "insert-core-into-slats",
            "inputs" : [ "graphite core", "wood slats with grooves" ],
            "outputs" : [ "pencil blanks" ],
            "resources" : [ "glue applicator" ],
            "subprocesses" : [ ]
          }, {
            "process-id" : "shape-and-paint-pencil",
            "inputs" : [ "pencil blanks", "paint" ],
            "outputs" : [ "shaped and painted pencils" ],
            "resources" : [ "shaping machine", "painting station" ],
            "subprocesses" : [ ]
          }, {
            "process-id" : "attach-eraser",
            "optional?" : {
              "val" : true,
              "comment" : "'optional?' means that the process does not occur for every product. Not every pencil has an eraser."
            },
            "inputs" : [ "shaped and painted pencils", "metal", "erasers" ],
            "outputs" : [ "finished pencils" ],
            "resources" : [ "crimping tool" ],
            "subprocesses" : [ ]
          } ]
        } ]
      } ]
    }
  }
}